# Generated by Django 2.2.10 on 2020-06-03 13:58

from django.conf import settings
import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.migrations.operations.special
import django.db.models.deletion
import django_countries.fields


# Functions from the following migrations need manual copying.
# Move them and any dependencies into this file, then update the
# RunPython operations to refer to the local versions:
# mi.migrations.0005_auto_20161128_1522
# mi.migrations.0007_auto_20161130_1154
# mi.migrations.0009_auto_20161130_1223
# mi.migrations.0011_auto_20161130_1452
# mi.migrations.0013_auto_20161130_1540
# mi.migrations.0015_auto_20170112_1113
# mi.migrations.0016_auto_20170112_1122
# mi.migrations.0017_auto_20170112_1235
# mi.migrations.0018_auto_20170119_1358
# mi.migrations.0019_auto_20170119_1513
# mi.migrations.0021_auto_20170120_1253
# mi.migrations.0022_auto_20170120_1617
# mi.migrations.0024_auto_20170120_1649
# mi.migrations.0025_auto_20170123_1435
# mi.migrations.0027_auto_20170222_1149
# mi.migrations.0031_auto_20170403_1515
# mi.migrations.0034_auto_20170509_0843
# mi.migrations.0035_auto_20170511_1344
# mi.migrations.0037_auto_20170605_1636
# mi.migrations.0037_auto_20170610_2310
# mi.migrations.0038_auto_20170612_1255
# mi.migrations.0040_auto_20170612_1012
# mi.migrations.0043_auto_20170707_1446
# mi.migrations.0048_auto_20170906_0924
# mi.migrations.0050_auto_20171127_1548

# these come from CDMS, except for those marked.
SECTORS = (
    (1, "Advanced Engineering"),
    (2, "Aerospace"),
    (3, "Aerospace : Aircraft Design"),
    (4, "Aerospace : Component Manufacturing"),
    (5, "Aerospace : Component Manufacturing : Engines"),
    (6, "Aerospace : Component Manufacturing : test widgerts"),  # not cdms/spreadsheet
    (7, "Aerospace : Maintenance"),
    (8, "Aerospace : Manufacturing and Assembly"),
    (9, "Aerospace : Manufacturing and Assembly : Aircraft"),
    (10, "Aerospace : Manufacturing and Assembly : Helicopters"),
    (11, "Aerospace : Manufacturing and Assembly : Space Technology"),
    (12, "Aerospace : Manufacturing and Assembly : UAVs"),
    (13, "Agriculture, Horticulture and Fisheries"),
    (14, "Airports"),
    (15, "Automotive"),
    (16, "Automotive : Automotive Maintenance"),
    (17, "Automotive : Automotive Retail"),
    (18, "Automotive : Component Manufacturing"),
    (19, "Automotive : Component Manufacturing : Bodies and Coachwork"),
    (20, "Automotive : Component Manufacturing : Electronic Components"),
    (21, "Automotive : Component Manufacturing : Engines and Transmission"),
    (22, "Automotive : Component Manufacturing : Tyres"),
    (23, "Automotive : Design Engineering"),
    (24, "Automotive : Manufacturing and Assembly"),
    (25, "Automotive : Manufacturing and Assembly : Agricultural Machinery"),
    (26, "Automotive : Manufacturing and Assembly : Bicycles"),
    (27, "Automotive : Manufacturing and Assembly : Caravans"),
    (28, "Automotive : Manufacturing and Assembly : Cars"),
    (29, "Automotive : Manufacturing and Assembly : Containers"),
    (30, "Automotive : Manufacturing and Assembly : Invalid Carriages"),
    (31, "Automotive : Manufacturing and Assembly : Lorries"),
    (32, "Automotive : Manufacturing and Assembly : Motorcycles"),
    (33, "Automotive : Manufacturing and Assembly : Trailers"),
    (34, "Automotive : Manufacturing and Assembly : Vans"),
    (35, "Automotive : Motorsport"),
    (36, "Biotechnology and Pharmaceuticals"),
    (37, "Biotechnology and Pharmaceuticals : Bio and Pharma Marketing and Sales"),
    (38, "Biotechnology and Pharmaceuticals : Bio and Pharma Marketing and Sales : Bio and Pharma Retail"),
    (39, "Biotechnology and Pharmaceuticals : Bio and Pharma Marketing and Sales : Bio and Pharma Wholesale"),
    (40, "Biotechnology and Pharmaceuticals : Biotechnology"),
    (41, "Biotechnology and Pharmaceuticals : Biotechnology : Agribio"),
    (42, "Biotechnology and Pharmaceuticals : Biotechnology : Biodiagnostics"),
    (43, "Biotechnology and Pharmaceuticals : Biotechnology : Biomanufacturing"),
    (44, "Biotechnology and Pharmaceuticals : Biotechnology : Bioremediation"),
    (45, "Biotechnology and Pharmaceuticals : Biotechnology : Biotherapeutics"),
    (46, "Biotechnology and Pharmaceuticals : Biotechnology : Industrialbio"),
    (47, "Biotechnology and Pharmaceuticals : Biotechnology : Platform Technologies"),
    (48, "Biotechnology and Pharmaceuticals : Clinical Trials"),
    (49, "Biotechnology and Pharmaceuticals : Lab Services"),
    (50, "Biotechnology and Pharmaceuticals : Lab Services : Contract Research"),
    (51, "Biotechnology and Pharmaceuticals : Lab Services : Reagents, Consumables and Instruments"),
    (52, "Biotechnology and Pharmaceuticals : Pharmaceuticals"),
    (53, "Biotechnology and Pharmaceuticals : Pharmaceuticals : Basic Pharmaceutical Products"),
    (54, "Biotechnology and Pharmaceuticals : Pharmaceuticals : Drug Discovery"),
    (55, "Biotechnology and Pharmaceuticals : Pharmaceuticals : Drug Manufacture"),
    (56, "Biotechnology and Pharmaceuticals : Pharmaceuticals : Neutraceuticals"),
    (57, "Biotechnology and Pharmaceuticals : Vaccines"),
    (58, "Business (and Consumer) Services"),
    (59, "Business (and Consumer) Services : Commercial Real Estate Services"),
    (60, "Business (and Consumer) Services : Contact Centres"),
    (61, "Business (and Consumer) Services : HR Services"),
    (62, "Business (and Consumer) Services : Marketing Services"),
    (63, "Business (and Consumer) Services : Marketing Services : Market Research"),
    (64, "Business (and Consumer) Services : Shared Service Centres"),
    (65, "Chemicals"),
    (66, "Chemicals : Agricultural Chemicals"),
    (67, "Chemicals : Basic Chemicals"),
    (68, "Chemicals : Cleaning Preparations"),
    (69, "Chemicals : Miscellaneous Chemicals"),
    (70, "Chemicals : Paint, Coating and Adhesive Products"),
    (71, "Chemicals : Synthetic Materials"),
    (72, "Clothing, Footwear and Fashion"),
    (73, "Clothing, Footwear and Fashion : Clothing"),
    (74, "Clothing, Footwear and Fashion : Clothing : Workwear"),
    (75, "Clothing, Footwear and Fashion : Footwear"),
    (76, "Communications"),
    (77, "Communications : Broadband"),
    (78, "Communications : Communications Wholesale"),
    (79, "Communications : Convergent"),
    (80, "Communications : Fixed Line"),
    (81, "Communications : Mobile"),
    (82, "Communications : Mobile : 3G Services"),
    (83, "Communications : Mobile : GSM"),
    (84, "Communications : Retail"),
    (85, "Communications : Wireless"),
    (86, "Communications : Wireless : Wi-Fi"),
    (87, "Communications : Wireless : Wi-Max"),
    (88, "Construction"),
    (89, "Creative and Media"),
    (90, "Creative and Media : Architecture"),
    (91, "Creative and Media : Art, Design and Creativity"),
    (92, "Creative and Media : Art, Design and Creativity : Artistic and Literary Creation"),
    (93, "Creative and Media : Art, Design and Creativity : Arts Facilities Operation"),
    (94, "Creative and Media : Art, Design and Creativity : Design"),
    (95, "Creative and Media : Art, Design and Creativity : Fashion"),
    (96, "Creative and Media : Art, Design and Creativity : Live Theatrical Presentations"),
    (97, "Creative and Media : Creative and Media Distribution"),
    (98, "Creative and Media : Creative and Media Distribution : Film and Video"),
    (99, "Creative and Media : Creative and Media Equipment"),
    (100, "Creative and Media : Creative and Media Equipment : Musical Instrument Manufacture"),
    (101, "Creative and Media : Creative and Media Equipment : Photo and Cinema Equipment"),
    (102, "Creative and Media : Creative and Media Retail"),
    (103, "Creative and Media : Creative and Media Retail : Antiques and Antiquities"),
    (104, "Creative and Media : Creative and Media Retail : Art"),
    (105, "Creative and Media : Creative and Media Retail : Books, Newspapers and Stationery"),
    (106, "Creative and Media : Creative and Media Wholesaling"),
    (107, "Creative and Media : Creative and Media Wholesaling : Multimedia Sales"),
    (108, "Creative and Media : Creative and Media Wholesaling : Musical Instruments"),
    (109, "Creative and Media : Creative and Media Wholesaling : Photographic Goods"),
    (110, "Creative and Media : Events and Attractions"),
    (111, "Creative and Media : Media"),
    (112, "Creative and Media : Media : Advertising"),
    (113, "Creative and Media : Media : Film, Photography and Animation"),
    (114, "Creative and Media : Media : Music"),
    (115, "Creative and Media : Media : Publishing"),
    (116, "Creative and Media : Media : TV and Radio"),
    (117, "Creative and Media : Media : Video Games"),
    (118, "Creative and Media : Media Reproduction"),
    (119, "Creative and Media : Media Reproduction : Printing"),
    (120, "Creative and Media : Media Reproduction : Reproduction"),
    (121, "Defence"),
    (122, "Defence and Security"),
    (123, "Education and Training"),
    (124, "Electronics and IT Hardware"),
    (125, "Electronics and IT Hardware : Electronic Instruments"),
    (126, "Electronics and IT Hardware : Electronics and IT Technologies"),
    (127, "Electronics and IT Hardware : Electronics and IT Technologies : Broadcasting"),
    (128, "Electronics and IT Hardware : Electronics and IT Technologies : Component Technologies"),
    (129, "Electronics and IT Hardware : Electronics and IT Technologies : Computing"),
    (130, "Electronics and IT Hardware : Electronics and IT Technologies : Display Technologies"),
    (131, "Electronics and IT Hardware : Electronics and IT Technologies : Network Technologies"),
    (132, "Electronics and IT Hardware : Electronics and IT Technologies : Security Technologies"),
    (133, "Energy"),
    (134, "Environment"),
    (135, "Environment : Air Pollution and Noise Control"),
    (136, "Environment : Environmental Monitoring"),
    (137, "Environment : Fuel Cells"),
    (138, "Environment : Marine Pollution Control"),
    (139, "Environment : Sanitation and Remediation"),
    (140, "Environment : Waste Management"),
    (141, "Environment : Waste Management : Hazardous Waste Management"),
    (142, "Environment : Waste Management : Non-Metal Waste and Scrap Recycling"),
    (143, "Environment : Waste Management : Sewage Collection and Treatment"),
    (144, "Environment : Waste to Energy"),
    (145, "Environment : Water Management"),
    (146, "Environment and Water"),
    (147, "Financial Services (including Professional Services)"),
    (148, "Financial Services (including Professional Services) : Asset Management"),
    (149, "Financial Services (including Professional Services) : Banking"),
    (150, "Financial Services (including Professional Services) : Banking : Commercial Banking"),
    (151, "Financial Services (including Professional Services) : Banking : Investment Banking"),
    (152, "Financial Services (including Professional Services) : Banking : Private Banking"),
    (153, "Financial Services (including Professional Services) : Banking : Retail Banking"),
    (154, "Financial Services (including Professional Services) : Capital Markets"),
    (155, "Financial Services (including Professional Services) : Capital Markets : Hedge Funds"),
    (156, "Financial Services (including Professional Services) : Capital Markets : Private Equity"),
    (157, "Financial Services (including Professional Services) : Capital Markets : Venture Capital"),
    (158, "Financial Services (including Professional Services) : Foreign Exchange"),
    (159, "Financial Services (including Professional Services) : Insurance"),
    (160, "Financial Services (including Professional Services) : Insurance : Commercial Insurance"),
    (161, "Financial Services (including Professional Services) : Insurance : Home Insurance"),
    (162, "Financial Services (including Professional Services) : Insurance : Life Insurance"),
    (163, "Financial Services (including Professional Services) : Insurance : Motor Insurance"),
    (164, "Financial Services (including Professional Services) : Insurance : Travel Insurance"),
    (165, "Financial Services (including Professional Services) : Listings"),
    (166, "Financial Services (including Professional Services) : Professional Services"),
    (167, "Financial Services (including Professional Services) : Professional Services : Accountancy Services"),
    (168, "Financial Services (including Professional Services) : Professional Services : Legal Services"),
    (169, "Financial Services (including Professional Services) : Professional Services : Management Consultancy"),
    (170, "Food and Drink"),
    (171, "Food and Drink : Bakery Products"),
    (172, "Food and Drink : Beverages and Alcoholic Drinks"),
    (173, "Food and Drink : Brewing"),
    (174, "Food and Drink : Dairy Products"),
    (175, "Food and Drink : Food and Drink Manufacturing"),
    (176, "Food and Drink : Frozen and Chilled Foods"),
    (177, "Food and Drink : Fruit and Vegetables"),
    (178, "Food and Drink : Meat Products"),
    (179, "Food and Drink : Pet Food"),
    (180, "Food and Drink : Ready Meals"),
    (181, "Food and Drink : Secondary Food Processing"),
    (182, "Food and Drink : Tobacco Products"),
    (183, "Giftware, Jewellery and Tableware"),
    (184, "Global Sports Projects"),
    (185, "Global Sports Projects : Major Events"),
    (186, "Healthcare and Medical"),
    (187, "Healthcare and Medical : Healthcare Marketing and Sales"),
    (188, "Healthcare and Medical : Healthcare Marketing and Sales : Healthcare Retail"),
    (189, "Healthcare and Medical : Healthcare Marketing and Sales : Healthcare Wholesale"),
    (190, "Healthcare and Medical : Healthcare Services"),
    (191, "Healthcare and Medical : Healthcare Services : Dentists"),
    (192, "Healthcare and Medical : Healthcare Services : Medical Practice"),
    (193, "Healthcare and Medical : Healthcare Services : Nursing Homes"),
    (194, "Healthcare and Medical : Healthcare Services : Private Sector"),
    (195, "Healthcare and Medical : Healthcare Services : Public Sector"),
    (196, "Healthcare and Medical : Healthcare Services : Vets"),
    (197, "Healthcare and Medical : Medical Consumables"),
    (198, "Healthcare and Medical : Medical Devices and Systems"),
    (199, "Healthcare and Medical : Medical Devices and Systems : Optical Precision Instruments"),
    (200, "Healthcare and Medical : Medical Equipment"),
    (201, "Healthcare and Medical : Medical Equipment : Dental Aesthetics"),
    (202, "Healthcare and Medical : Medical Equipment : Glass"),
    (203, "Healthcare and Medical : Medical Equipment : Spectacles and Unmounted Lenses"),
    (204, "Healthcare and Medical : Medical Lab Services"),
    (205, "Household Goods, Furniture and Furnishings"),
    (206, "ICT"),
    (207, "Leisure and Tourism"),
    (208, "Leisure and Tourism : Gaming"),
    (209, "Leisure and Tourism : Gaming : Casino Gambling"),
    (210, "Leisure and Tourism : Gaming : Mass-Market Gambling"),
    (211, "Leisure and Tourism : Sports and Leisure Infrastructure"),
    (212, "Life Sciences"),
    (213, "Marine"),
    (214, "Mass Transport"),
    (215, "Mechanical Electrical and Process Engineering"),
    (216, "Metallurgical Process Plant"),
    (217, "Metals, Minerals and Materials"),
    (218, "Metals, Minerals and Materials : Ceramics"),
    (219, "Metals, Minerals and Materials : Composite Materials"),
    (220, "Metals, Minerals and Materials : Elastomers and Rubbers"),
    (221, "Metals, Minerals and Materials : Metals"),
    (222, "Metals, Minerals and Materials : Minerals"),
    (223, "Metals, Minerals and Materials : Plastics"),
    (224, "Mining"),
    # (225, "More Sectors"),  # not cdms/spreadsheet
    (226, "Oil and Gas"),
    (227, "Ports and Logistics"),
    (228, "Power"),
    (229, "Power : Nuclear"),
    (230, "Power : Nuclear : Nuclear De-commissiong"),
    (231, "Railways"),
    (232, "Renewable Energy"),
    (233, "Renewable Energy : Biomass"),
    (234, "Renewable Energy : Geothermal"),
    (235, "Renewable Energy : Hydro"),
    (236, "Renewable Energy : Solar"),
    (237, "Renewable Energy : Tidal"),
    (238, "Renewable Energy : Wave"),
    (239, "Renewable Energy : Wind"),
    (240, "Renewable Energy : Wind : Renewable energy: Wind: Offshore"),
    (241, "Renewable Energy : Wind : Renewable energy: Wind: Onshore"),
    (242, "Retail"),
    (243, "Security"),
    (244, "Security : Cyber Security"),
    (245, "Software and Computer Services Business to Business (B2B)"),
    (246, "Software and Computer Services Business to Business (B2B) : Biometrics"),
    (247, "Software and Computer Services Business to Business (B2B) : E-Procurement"),
    (248, "Software and Computer Services Business to Business (B2B) : Financial Applications"),
    (249, "Software and Computer Services Business to Business (B2B) : Healthcare Applications"),
    (250, "Software and Computer Services Business to Business (B2B) : Industry Applications"),
    (251, "Software and Computer Services Business to Business (B2B) : Online Retailing"),
    (252, "Software and Computer Services Business to Business (B2B) : Security Related Software"),
    (253, "Software and Computer Services Business to Business (B2B) : Support Services"),
    (254, "Software and Computer Services Business to Business (B2B) : Support Services"
          " : Equipment Maintenance and Repair"),
    (255, "Software and Computer Services Business to Business (B2B) : Support Services : Internet Service Providers"),
    (256, "Textiles, Interior Textiles and Carpets"),
    (257, "Water"),
)


def do_thing__0005(apps, schema_editor):
    OverseasRegion = apps.get_model('mi', 'OverseasRegion')
    SectorTeam = apps.get_model('mi', 'SectorTeam')
    Target = apps.get_model('mi', 'Target')

    sector_teams = ['Financial & Professional Services', 'Education', 'Technology', 'Food & Drink', 'Aerospace', 'Infrastructure', 'Energy', 'Life Sciences', 'Advanced Manufacturing', 'Consumer & Creative', 'Automotive', 'Healthcare', 'Bio-economy', 'Defence & Security']
    for sector_team in sector_teams:
        SectorTeam(name=sector_team).save()

    overseas_regions = ['North Africa', 'South East Asia', 'North America', 'West Africa', 'Western Europe', 'Latin America', 'Australia-New Zealand', 'East Africa', 'South Asia', 'Central European Network', 'Nordic Baltic Network', 'Turkey and Caucasus', 'North East Asia', 'Middle East', 'Southern Africa', 'China', 'Mediterranean']
    for overseas_region in overseas_regions:
        OverseasRegion(name=overseas_region).save()

    hvcs = ['E100', 'E140', 'E133', 'E105', 'E026', 'E063', 'E172', 'E048', 'E032', 'E074', 'E016', 'E084', 'E040', 'E160', 'E013', 'E154', 'E108', 'E189', 'E041', 'E075', 'E062', 'E092', 'E009', 'E146', 'E083', 'E142', 'E165', 'E007', 'E175', 'E042', 'E088', 'E058', 'E191', 'E064', 'E089', 'E021', 'E033', 'E153', 'E045', 'E110', 'E117', 'E217', 'E168', 'E098', 'E035', 'E030', 'E151', 'E099', 'E188', 'E065', 'E051', 'E213', 'E145', 'E167', 'E171', 'E020', 'E118', 'E156', 'E211', 'E081', 'E152', 'E079', 'E037', 'E066', 'E162', 'E086', 'E022', 'E076', 'E129', 'E091', 'E128', 'E019', 'E060', 'E143', 'E053', 'E176', 'E034', 'E114', 'E194', 'E027', 'E082', 'E043', 'E210', 'E170', 'E001', 'E166', 'E209', 'E190', 'E029', 'E149', 'E080', 'E047', 'E052', 'E157', 'E158', 'E169', 'E077', 'E056', 'E161', 'E121', 'E101', 'E018', 'E012', 'E085', 'E102', 'E069', 'E127', 'E123', 'E025', 'E147', 'E122', 'E055', 'E215', 'E015', 'E115', 'E187', 'E179', 'E046', 'E131', 'E070', 'E137', 'E028', 'E178', 'E119', 'E054', 'E138', 'E039', 'E059', 'E139', 'E134', 'E031', 'E144', 'E094', 'E006', 'E126', 'E067', 'E124', 'E150', 'E050', 'E096', 'E071', 'E049', 'E116', 'E093', 'E107', 'E174', 'E112', 'E087', 'E005', 'E106', 'E097', 'E014', 'E184', 'E155', 'E011', 'E214', 'E023', 'E186', 'E182', 'E044', 'E095', 'E212', 'E024', 'E180', 'E159', 'E164', 'E078', 'E004', 'E073', 'E136', 'E103', 'E111', 'E141', 'E061', 'E008', 'E090', 'E109', 'E017', 'E163', 'E010', 'E130', 'E177', 'E183', 'E002', 'E120', 'E104', 'E132', 'E125', 'E068', 'E003', 'E181', 'E173', 'E148', 'E192', 'E185', 'E038', 'E072', 'E135', 'E195']
    for hvc in hvcs:
        Target(campaign_id=hvc, target=10000000).save()


def do_thing__0007(apps, schema_editor):
    Sector = apps.get_model('mi', 'Sector')
    SectorTeam = apps.get_model('mi', 'SectorTeam')

    sector_to_sector_team = {1: 'Advanced Manufacturing', 2: 'Aerospace', 3: 'Aerospace', 4: 'Aerospace', 5: 'Aerospace', 7: 'Aerospace', 8: 'Aerospace', 9: 'Aerospace', 10: 'Aerospace', 11: 'Aerospace', 12: 'Aerospace', 13: 'Bio-economy', 14: 'Infrastructure', 15: 'Automotive', 16: 'Automotive', 17: 'Automotive', 18: 'Automotive', 19: 'Automotive', 20: 'Automotive', 21: 'Automotive', 22: 'Automotive', 23: 'Automotive', 24: 'Automotive', 25: 'Automotive', 26: 'Automotive', 27: 'Automotive', 28: 'Automotive', 29: 'Automotive', 30: 'Automotive', 31: 'Automotive', 32: 'Automotive', 33: 'Automotive', 34: 'Automotive', 35: 'Automotive', 36: 'Life Sciences', 37: 'Life Sciences', 38: 'Life Sciences', 39: 'Life Sciences', 40: 'Life Sciences', 41: 'Life Sciences', 42: 'Life Sciences', 43: 'Life Sciences', 44: 'Life Sciences', 45: 'Life Sciences', 46: 'Life Sciences', 47: 'Life Sciences', 48: 'Life Sciences', 49: 'Life Sciences', 50: 'Life Sciences', 51: 'Life Sciences', 52: 'Life Sciences', 53: 'Life Sciences', 54: 'Life Sciences', 55: 'Life Sciences', 56: 'Life Sciences', 57: 'Life Sciences', 58: 'Financial & Professional Services', 59: 'Financial & Professional Services', 60: 'Financial & Professional Services', 61: 'Financial & Professional Services', 62: 'Financial & Professional Services', 63: 'Financial & Professional Services', 64: 'Financial & Professional Services', 65: 'Bio-economy', 66: 'Bio-economy', 67: 'Bio-economy', 68: 'Bio-economy', 69: 'Bio-economy', 70: 'Bio-economy', 71: 'Bio-economy', 72: 'Consumer & Creative', 73: 'Consumer & Creative', 74: 'Consumer & Creative', 75: 'Consumer & Creative', 76: 'Technology', 77: 'Technology', 78: 'Technology', 79: 'Technology', 80: 'Technology', 81: 'Technology', 82: 'Technology', 83: 'Technology', 84: 'Technology', 85: 'Technology', 86: 'Technology', 87: 'Technology', 88: 'Infrastructure', 89: 'Consumer & Creative', 90: 'Consumer & Creative', 91: 'Consumer & Creative', 92: 'Consumer & Creative', 93: 'Consumer & Creative', 94: 'Consumer & Creative', 95: 'Consumer & Creative', 96: 'Consumer & Creative', 97: 'Consumer & Creative', 98: 'Consumer & Creative', 99: 'Consumer & Creative', 100: 'Consumer & Creative', 101: 'Consumer & Creative', 102: 'Consumer & Creative', 103: 'Consumer & Creative', 104: 'Consumer & Creative', 105: 'Consumer & Creative', 106: 'Consumer & Creative', 107: 'Consumer & Creative', 108: 'Consumer & Creative', 109: 'Consumer & Creative', 110: 'Consumer & Creative', 111: 'Consumer & Creative', 112: 'Consumer & Creative', 113: 'Consumer & Creative', 114: 'Consumer & Creative', 115: 'Consumer & Creative', 116: 'Consumer & Creative', 117: 'Consumer & Creative', 118: 'Consumer & Creative', 119: 'Consumer & Creative', 120: 'Consumer & Creative', 121: 'Defence & Security', 122: 'Defence & Security', 123: 'Education', 124: 'Technology', 125: 'Technology', 126: 'Technology', 127: 'Technology', 128: 'Technology', 129: 'Technology', 130: 'Technology', 131: 'Technology', 132: 'Technology', 133: 'Energy', 134: 'Infrastructure', 135: 'Infrastructure', 136: 'Infrastructure', 137: 'Infrastructure', 138: 'Infrastructure', 139: 'Infrastructure', 140: 'Infrastructure', 141: 'Infrastructure', 142: 'Infrastructure', 143: 'Infrastructure', 144: 'Infrastructure', 145: 'Infrastructure', 146: 'Infrastructure', 147: 'Financial & Professional Services', 148: 'Financial & Professional Services', 149: 'Financial & Professional Services', 150: 'Financial & Professional Services', 151: 'Financial & Professional Services', 152: 'Financial & Professional Services', 153: 'Financial & Professional Services', 154: 'Financial & Professional Services', 155: 'Financial & Professional Services', 156: 'Financial & Professional Services', 157: 'Financial & Professional Services', 158: 'Financial & Professional Services', 159: 'Financial & Professional Services', 160: 'Financial & Professional Services', 161: 'Financial & Professional Services', 162: 'Financial & Professional Services', 163: 'Financial & Professional Services', 164: 'Financial & Professional Services', 165: 'Financial & Professional Services', 166: 'Financial & Professional Services', 167: 'Financial & Professional Services', 168: 'Financial & Professional Services', 169: 'Financial & Professional Services', 170: 'Food & Drink', 171: 'Food & Drink', 172: 'Food & Drink', 173: 'Food & Drink', 174: 'Food & Drink', 175: 'Food & Drink', 176: 'Food & Drink', 177: 'Food & Drink', 178: 'Food & Drink', 179: 'Food & Drink', 180: 'Food & Drink', 181: 'Food & Drink', 182: 'Food & Drink', 183: 'Consumer & Creative', 184: 'Consumer & Creative', 185: 'Consumer & Creative', 186: 'Healthcare', 187: 'Healthcare', 188: 'Healthcare', 189: 'Healthcare', 190: 'Healthcare', 191: 'Healthcare', 192: 'Healthcare', 193: 'Healthcare', 194: 'Healthcare', 195: 'Healthcare', 196: 'Healthcare', 197: 'Healthcare', 198: 'Healthcare', 199: 'Healthcare', 200: 'Healthcare', 201: 'Healthcare', 202: 'Healthcare', 203: 'Healthcare', 204: 'Healthcare', 205: 'Consumer & Creative', 206: 'Technology', 207: 'Consumer & Creative', 208: 'Consumer & Creative', 209: 'Consumer & Creative', 210: 'Consumer & Creative', 211: 'Consumer & Creative', 212: 'Life Sciences', 213: 'Advanced Manufacturing', 214: 'Infrastructure', 215: 'Advanced Manufacturing', 216: 'Advanced Manufacturing', 217: 'Infrastructure', 218: 'Infrastructure', 219: 'Infrastructure', 220: 'Infrastructure', 221: 'Infrastructure', 222: 'Infrastructure', 223: 'Infrastructure', 224: 'Infrastructure', 226: 'Energy', 227: 'Infrastructure', 228: 'Energy', 229: 'Energy', 230: 'Energy', 231: 'Infrastructure', 232: 'Energy', 233: 'Energy', 234: 'Energy', 235: 'Energy', 236: 'Energy', 237: 'Energy', 238: 'Energy', 239: 'Energy', 240: 'Energy', 241: 'Energy', 242: 'Consumer & Creative', 243: 'Defence & Security', 244: 'Defence & Security', 245: 'Technology', 246: 'Technology', 247: 'Technology', 248: 'Technology', 249: 'Technology', 250: 'Technology', 251: 'Technology', 252: 'Technology', 253: 'Technology', 254: 'Technology', 255: 'Technology', 256: 'Consumer & Creative', 257: 'Infrastructure'}
    non_cdms = [6, 225]

    for sector_id, sector in SECTORS:
        if sector_id in non_cdms:
            continue
        team = sector_to_sector_team[sector_id]
        sector_team=SectorTeam.objects.get(name=team)
        Sector(id=sector_id, name=sector, sector_team=sector_team).save()


def do_thing__0009(apps, schema_editor):
    Target = apps.get_model('mi', 'Target')
    SectorTeam = apps.get_model('mi', 'SectorTeam')
    HVC_TO_SECTOR_TEAM = {'E044': 'Defence & Security', 'E119': 'Energy', 'E110': 'Infrastructure', 'E063': 'Automotive', 'E144': 'Aerospace', 'E131': 'Aerospace', 'E010': 'Infrastructure', 'E074': 'Healthcare', 'E167': 'Financial & Professional Services', 'E143': 'Infrastructure', 'E067': 'Consumer & Creative', 'E171': 'Bio-economy', 'E023': 'Aerospace', 'E001': 'Automotive', 'E080': 'Aerospace', 'E126': 'Infrastructure', 'E133': 'Defence & Security', 'E115': 'Financial & Professional Services', 'E033': 'Healthcare', 'E083': 'Consumer & Creative', 'E174': 'Consumer & Creative', 'E021': 'Defence & Security', 'E155': 'Bio-economy', 'E046': 'Defence & Security', 'E004': 'Consumer & Creative', 'E069': 'Technology', 'E030': 'Energy', 'E117': 'Energy', 'E122': 'Defence & Security', 'E182': 'Aerospace', 'E037': 'Infrastructure', 'E061': 'Infrastructure', 'E106': 'Life Sciences', 'E029': 'Energy', 'E105': 'Defence & Security', 'E072': 'Financial & Professional Services', 'E148': 'Advanced Manufacturing', 'E104': 'Technology', 'E135': 'Energy', 'E158': 'Consumer & Creative', 'E112': 'Energy', 'E082': 'Infrastructure', 'E027': 'Technology', 'E006': 'Financial & Professional Services', 'E147': 'Infrastructure', 'E097': 'Healthcare', 'E139': 'Aerospace', 'E175': 'Defence & Security', 'E009': 'Defence & Security', 'E039': 'Consumer & Creative', 'E056': 'Infrastructure', 'E078': 'Aerospace', 'E024': 'Automotive', 'E066': 'Consumer & Creative', 'E099': 'Energy', 'E179': 'Infrastructure', 'E209': 'Defence & Security', 'E054': 'Food & Drink', 'E011': 'Defence & Security', 'E178': 'Infrastructure', 'E188': 'Defence & Security', 'E141': 'Technology', 'E162': 'Aerospace', 'E058': 'Consumer & Creative', 'E018': 'Defence & Security', 'E042': 'Energy', 'E187': 'Consumer & Creative', 'E156': 'Consumer & Creative', 'E043': 'Energy', 'E102': 'Aerospace', 'E041': 'Infrastructure', 'E059': 'Education', 'E052': 'Defence & Security', 'E186': 'Consumer & Creative', 'E111': 'Education', 'E003': 'Food & Drink', 'E137': 'Infrastructure', 'E032': 'Food & Drink', 'E089': 'Life Sciences', 'E068': 'Defence & Security', 'E169': 'Infrastructure', 'E060': 'Infrastructure', 'E007': 'Energy', 'E028': 'Education', 'E020': 'Energy', 'E118': 'Food & Drink', 'E154': 'Infrastructure', 'E086': 'Technology', 'E098': 'Infrastructure', 'E165': 'Defence & Security', 'E034': 'Infrastructure', 'E096': 'Food & Drink', 'E157': 'Bio-economy', 'E015': 'Defence & Security', 'E088': 'Food & Drink', 'E002': 'Defence & Security', 'E101': 'Infrastructure', 'E103': 'Defence & Security', 'E211': 'Infrastructure', 'E160': 'Financial & Professional Services', 'E159': 'Defence & Security', 'E170': 'Aerospace', 'E213': 'Aerospace', 'E075': 'Infrastructure', 'E090': 'Consumer & Creative', 'E076': 'Life Sciences', 'E189': 'Technology', 'E116': 'Infrastructure', 'E016': 'Infrastructure', 'E121': 'Energy', 'E073': 'Food & Drink', 'E053': 'Energy', 'E092': 'Defence & Security', 'E176': 'Food & Drink', 'E194': 'Life Sciences', 'E180': 'Infrastructure', 'E146': 'Education', 'E038': 'Life Sciences', 'E093': 'Healthcare', 'E055': 'Life Sciences', 'E163': 'Defence & Security', 'E181': 'Life Sciences', 'E025': 'Consumer & Creative', 'E062': 'Aerospace', 'E064': 'Bio-economy', 'E008': 'Defence & Security', 'E129': 'Defence & Security', 'E195': 'Defence & Security', 'E138': 'Infrastructure', 'E192': 'Infrastructure', 'E049': 'Automotive', 'E047': 'Energy', 'E124': 'Infrastructure', 'E048': 'Food & Drink', 'E045': 'Aerospace', 'E017': 'Automotive', 'E142': 'Infrastructure', 'E134': 'Education', 'E173': 'Consumer & Creative', 'E005': 'Technology', 'E217': 'Infrastructure', 'E107': 'Automotive', 'E026': 'Consumer & Creative', 'E151': 'Technology', 'E152': 'Life Sciences', 'E114': 'Infrastructure', 'E177': 'Healthcare', 'E140': 'Defence & Security', 'E168': 'Healthcare', 'E125': 'Technology', 'E100': 'Infrastructure', 'E136': 'Healthcare', 'E040': 'Defence & Security', 'E071': 'Energy', 'E035': 'Infrastructure', 'E127': 'Technology', 'E012': 'Advanced Manufacturing', 'E081': 'Energy', 'E130': 'Consumer & Creative', 'E120': 'Defence & Security', 'E215': 'Defence & Security', 'E191': 'Financial & Professional Services', 'E212': 'Energy', 'E109': 'Technology', 'E145': 'Defence & Security', 'E210': 'Infrastructure', 'E166': 'Energy', 'E077': 'Consumer & Creative', 'E014': 'Energy', 'E087': 'Energy', 'E051': 'Consumer & Creative', 'E085': 'Defence & Security', 'E095': 'Financial & Professional Services', 'E084': 'Aerospace', 'E050': 'Bio-economy', 'E161': 'Infrastructure', 'E185': 'Bio-economy', 'E190': 'Energy', 'E153': 'Bio-economy', 'E019': 'Financial & Professional Services', 'E183': 'Infrastructure', 'E022': 'Advanced Manufacturing', 'E070': 'Energy', 'E128': 'Financial & Professional Services', 'E164': 'Technology', 'E132': 'Consumer & Creative', 'E149': 'Consumer & Creative', 'E123': 'Energy', 'E214': 'Advanced Manufacturing', 'E184': 'Automotive', 'E108': 'Defence & Security', 'E013': 'Defence & Security', 'E065': 'Bio-economy', 'E079': 'Defence & Security', 'E031': 'Financial & Professional Services', 'E172': 'Aerospace', 'E094': 'Education', 'E150': 'Defence & Security', 'E091': 'Energy'}
    for campaign_id, team_name in HVC_TO_SECTOR_TEAM.items():
        target = Target.objects.get(campaign_id=campaign_id)
        target.sector_team = SectorTeam.objects.get(name=team_name)
        target.save()


def do_thing__0011(apps, schema_editor):
    Country = apps.get_model('mi', 'Country')
    OverseasRegion = apps.get_model('mi', 'OverseasRegion')

    code_to_region = {'VG': 'North America', 'GS': 'North America', 'GA': 'West Africa', 'GT': 'Latin America', 'NA': 'Southern Africa', 'EC': 'Latin America', 'KE': 'East Africa', 'MM': 'South East Asia', 'BZ': 'North America', 'SE': 'Nordic Baltic Network', 'VU': 'Australia-New Zealand', 'IR': 'Middle East', 'BI': 'East Africa', 'SG': 'South East Asia', 'FK': 'North America', 'HT': 'Latin America', 'BB': 'North America', 'LT': 'Nordic Baltic Network', 'BW': 'Southern Africa', 'BF': 'West Africa', 'GF': 'Western Europe', 'BH': 'Middle East', 'MN': 'North East Asia', 'ZW': 'Southern Africa', 'PA': 'Latin America', 'LK': 'South Asia', 'MZ': 'Southern Africa', 'UM': 'North America', 'PT': 'Mediterranean', 'FO': 'Nordic Baltic Network', 'SK': 'Central European Network', 'KH': 'South East Asia', 'DO': 'Latin America', 'GP': 'Western Europe', 'KW': 'Middle East', 'BG': 'Central European Network', 'TN': 'North Africa', 'AL': 'Central European Network', 'MV': 'South Asia', 'TD': 'West Africa', 'SD': 'North Africa', 'KZ': 'Turkey and Caucasus', 'BT': 'South Asia', 'TF': 'Western Europe', 'QA': 'Middle East', 'CW': 'Western Europe', 'SN': 'West Africa', 'MO': 'China', 'VI': 'North America', 'MP': 'North America', 'AT': 'Central European Network', 'DZ': 'North Africa', 'CD': 'West Africa', 'YE': 'Middle East', 'MU': 'Southern Africa', 'GL': 'Nordic Baltic Network', 'HM': 'Australia-New Zealand', 'LC': 'North America', 'AD': 'Western Europe', 'IS': 'Nordic Baltic Network', 'IT': 'Mediterranean', 'GE': 'Turkey and Caucasus', 'MD': 'Central European Network', 'NE': 'West Africa', 'NI': 'Latin America', 'SL': 'West Africa', 'MR': 'North Africa', 'PH': 'South East Asia', 'GI': 'Mediterranean', 'IL': 'Mediterranean', 'AO': 'Southern Africa', 'MA': 'North Africa', 'SJ': 'Nordic Baltic Network', 'SX': 'Western Europe', 'BJ': 'West Africa', 'GQ': 'West Africa', 'NU': 'Australia-New Zealand', 'MT': 'Mediterranean', 'AQ': 'North America', 'PR': 'North America', 'BV': 'Nordic Baltic Network', 'SM': 'Mediterranean', 'GD': 'North America', 'AZ': 'Turkey and Caucasus', 'DM': 'North America', 'CL': 'Latin America', 'DJ': 'East Africa', 'SH': 'North America', 'TV': 'Australia-New Zealand', 'TC': 'North America', 'CK': 'Australia-New Zealand', 'KP': 'North East Asia', 'KR': 'North East Asia', 'MF': 'Western Europe', 'BE': 'Western Europe', 'MS': 'North America', 'TW': 'North East Asia', 'BA': 'Central European Network', 'BL': 'Western Europe', 'LU': 'Western Europe', 'MC': 'Mediterranean', 'GU': 'North America', 'MQ': 'Western Europe', 'NO': 'Nordic Baltic Network', 'VC': 'North America', 'LB': 'Middle East', 'SR': 'Latin America', 'NC': 'Western Europe', 'DK': 'Nordic Baltic Network', 'KI': 'Australia-New Zealand', 'SC': 'Southern Africa', 'CA': 'North America', 'ML': 'West Africa', 'MX': 'Latin America', 'BR': 'Latin America', 'VN': 'South East Asia', 'TM': 'Turkey and Caucasus', 'MY': 'South East Asia', 'SB': 'Australia-New Zealand', 'WS': 'Australia-New Zealand', 'TO': 'Australia-New Zealand', 'RU': 'Turkey and Caucasus', 'PL': 'Central European Network', 'LV': 'Nordic Baltic Network', 'ID': 'South East Asia', 'GN': 'West Africa', 'NR': 'Australia-New Zealand', 'RE': 'Western Europe', 'KM': 'Southern Africa', 'BO': 'Latin America', 'SV': 'Latin America', 'MG': 'Southern Africa', 'JM': 'North America', 'EH': 'North Africa', 'NZ': 'Australia-New Zealand', 'BY': 'Turkey and Caucasus', 'AG': 'North America', 'GH': 'West Africa', 'IO': 'South East Asia', 'PK': 'Middle East', 'OM': 'Middle East', 'CN': 'China', 'BS': 'North America', 'SZ': 'Southern Africa', 'AR': 'Latin America', 'TH': 'South East Asia', 'EE': 'Nordic Baltic Network', 'LI': 'Western Europe', 'PW': 'Australia-New Zealand', 'CC': 'Australia-New Zealand', 'LS': 'Southern Africa', 'KN': 'North America', 'ET': 'East Africa', 'YT': 'Western Europe', 'AX': 'Nordic Baltic Network', 'EG': 'North Africa', 'CR': 'Latin America', 'PS': 'Middle East', 'BD': 'South Asia', 'PN': 'Australia-New Zealand', 'BQ': 'Western Europe', 'GY': 'North America', 'LY': 'North Africa', 'BM': 'North America', 'PE': 'Latin America', 'TR': 'Turkey and Caucasus', 'BN': 'South East Asia', 'ZA': 'Southern Africa', 'FR': 'Western Europe', 'UG': 'East Africa', 'CI': 'West Africa', 'SO': 'East Africa', 'KY': 'North America', 'LA': 'South East Asia', 'TK': 'Australia-New Zealand', 'GR': 'Mediterranean', 'TG': 'West Africa', 'CV': 'West Africa', 'DE': 'Western Europe', 'US': 'North America', 'NP': 'South Asia', 'ST': 'West Africa', 'HN': 'Latin America', 'ME': 'Central European Network', 'FJ': 'Australia-New Zealand', 'PY': 'Latin America', 'NF': 'Australia-New Zealand', 'CY': 'Mediterranean', 'CM': 'West Africa', 'WF': 'Western Europe', 'AS': 'North America', 'VA': 'Mediterranean', 'LR': 'West Africa', 'AM': 'Turkey and Caucasus', 'NG': 'West Africa', 'JP': 'North East Asia', 'AE': 'Middle East', 'AI': 'North America', 'IN': 'South Asia', 'JO': 'Middle East', 'IE': 'Western Europe', 'TT': 'North America', 'NL': 'Western Europe', 'RW': 'East Africa', 'AU': 'Australia-New Zealand', 'TL': 'South East Asia', 'FM': 'Australia-New Zealand', 'RS': 'Central European Network', 'HK': 'China', 'ES': 'Mediterranean', 'HR': 'Central European Network', 'TZ': 'East Africa', 'AW': 'Western Europe', 'FI': 'Nordic Baltic Network', 'AF': 'Middle East', 'GM': 'West Africa', 'GW': 'West Africa', 'IQ': 'Middle East', 'VE': 'Latin America', 'CX': 'Australia-New Zealand', 'CZ': 'Central European Network', 'TJ': 'Turkey and Caucasus', 'SS': 'East Africa', 'CO': 'Latin America', 'MK': 'Central European Network', 'RO': 'Central European Network', 'CF': 'West Africa', 'SY': 'Middle East', 'CU': 'Latin America', 'PF': 'Western Europe', 'CG': 'West Africa', 'MW': 'Southern Africa', 'UA': 'Turkey and Caucasus', 'SI': 'Central European Network', 'UY': 'Latin America', 'SA': 'Middle East', 'KG': 'Turkey and Caucasus', 'ER': 'East Africa', 'MH': 'Australia-New Zealand', 'ZM': 'Southern Africa', 'PG': 'Australia-New Zealand', 'CH': 'Western Europe', 'HU': 'Central European Network', 'UZ': 'Turkey and Caucasus', 'PM': 'Western Europe'}
    for code, region in code_to_region.items():
        overseas_region = OverseasRegion.objects.get(name=region)
        Country(country=code, overseas_region=overseas_region).save()


def add_parent_sectors__0015(apps, schema_editor):
    ParentSector = apps.get_model('mi', 'ParentSector')
    SectorTeam = apps.get_model('mi', 'SectorTeam')

    parent_sectors = {1: 'Advanced Engineering', 2: 'Advanced Manufacturing', 3: 'Aerospace', 4: 'Agriculture, Horticulture and Fisheries', 5: 'Agritech', 6: 'Aid Funded Business', 7: 'Airports', 8: 'Automotive', 9: 'Biotechnology and Pharmaceuticals', 10: 'Business (and Consumer) Services', 11: 'Chemicals', 12: 'Clothing, Footwear and Fashion', 13: 'Communications', 14: 'Construction', 15: 'Consumer Goods & Retail', 16: 'Creative and Media', 17: 'Creative Industries', 18: 'Defence', 19: 'Defence and Security', 20: 'Digital Economy', 21: 'Education', 22: 'Education and Training', 23: 'Electronics and IT Hardware', 24: 'Energy', 25: 'Environment', 26: 'Environment and Water', 27: 'Financial Services', 28: 'Financial Services (including Professional Services)', 29: 'Food and Drink', 30: 'Giftware, Jewellery and Tableware', 31: 'Global Sports Projects', 32: 'Healthcare', 33: 'Healthcare and Medical', 34: 'Household Goods, Furniture and Furnishings', 35: 'ICT', 36: 'Leisure and Tourism', 37: 'Life Sciences', 38: 'Marine', 39: 'Mass Transport', 40: 'Mechanical Electrical and Process Engineering', 41: 'Metallurgical Process Plant', 42: 'Metals, Minerals and Materials', 43: 'Mining', 44: 'Nuclear', 45: 'Oil and Gas', 46: 'Ports and Logistics', 47: 'Power', 48: 'Professional Business Services', 49: 'Railways', 50: 'Renewable Energy', 51: 'Retail', 52: 'Security', 53: 'Software and Computer Services Business to Business (B2B)', 54: 'Sports Economy', 55: 'Textiles, Interior Textiles and Carpets', 56: 'Water'}
    parent_sector_to_sector_team = {'Education and Training': 'Education', 'Giftware, Jewellery and Tableware': 'Consumer & Creative', 'Healthcare': 'Healthcare', 'Financial Services (including Professional Services)': 'Financial & Professional Services', 'Sports Economy': 'Consumer & Creative', 'Power': 'Energy', 'Textiles, Interior Textiles and Carpets': 'Consumer & Creative', 'Energy': 'Energy', 'Household Goods, Furniture and Furnishings': 'Consumer & Creative', 'Mass Transport': 'Infrastructure', 'Chemicals': 'Bio-economy', 'Environment and Water': 'Infrastructure', 'Agritech': 'Bio-economy', 'Ports and Logistics': 'Infrastructure', 'Renewable Energy': 'Energy', 'Airports': 'Infrastructure', 'Aerospace': 'Aerospace', 'Leisure and Tourism': 'Consumer & Creative', 'Defence': 'Defence & Security', 'Marine': 'Advanced Manufacturing', 'Financial Services': 'Financial & Professional Services', 'Water': 'Infrastructure', 'Oil and Gas': 'Energy', 'Creative Industries': 'Consumer & Creative', 'Automotive': 'Automotive', 'Agriculture, Horticulture and Fisheries': 'Bio-economy', 'Consumer Goods & Retail': 'Consumer & Creative', 'Food and Drink': 'Food & Drink', 'Clothing, Footwear and Fashion': 'Consumer & Creative', 'Mechanical Electrical and Process Engineering': 'Advanced Manufacturing', 'Mining': 'Infrastructure', 'Retail': 'Consumer & Creative', 'Creative and Media': 'Consumer & Creative', 'Digital Economy': 'Technology', 'Life Sciences': 'Life Sciences', 'Aid Funded Business': 'Infrastructure', 'Advanced Manufacturing': 'Advanced Manufacturing', 'Global Sports Projects': 'Consumer & Creative', 'Environment': 'Infrastructure', 'Biotechnology and Pharmaceuticals': 'Life Sciences', 'Metals, Minerals and Materials': 'Infrastructure', 'Advanced Engineering': 'Advanced Manufacturing', 'Electronics and IT Hardware': 'Technology', 'Metallurgical Process Plant': 'Advanced Manufacturing', 'Nuclear': 'Energy', 'Professional Business Services': 'Financial & Professional Services', 'Business (and Consumer) Services': 'Financial & Professional Services', 'Defence and Security': 'Defence & Security', 'Railways': 'Infrastructure', 'Construction': 'Infrastructure', 'Software and Computer Services Business to Business (B2B)': 'Technology', 'Communications': 'Technology', 'ICT': 'Technology', 'Education': 'Education', 'Security': 'Defence & Security', 'Healthcare and Medical': 'Healthcare'}

    for parent_id, parent_name in parent_sectors.items():
        team = parent_sector_to_sector_team[parent_name]
        sector_team=SectorTeam.objects.get(name=team)
        ParentSector(id=parent_id, name=parent_name, sector_team=sector_team).save()


def update_sectors__0016(apps, schema_editor):
    Sector = apps.get_model('mi', 'Sector')
    ParentSector = apps.get_model('mi', 'ParentSector')

    sector_to_parent_sector = {1: 'Advanced Engineering', 2: 'Aerospace', 3: 'Aerospace', 4: 'Aerospace', 5: 'Aerospace', 7: 'Aerospace', 8: 'Aerospace', 9: 'Aerospace', 10: 'Aerospace', 11: 'Aerospace', 12: 'Aerospace', 13: 'Agriculture, Horticulture and Fisheries', 14: 'Airports', 15: 'Automotive', 16: 'Automotive', 17: 'Automotive', 18: 'Automotive', 19: 'Automotive', 20: 'Automotive', 21: 'Automotive', 22: 'Automotive', 23: 'Automotive', 24: 'Automotive', 25: 'Automotive', 26: 'Automotive', 27: 'Automotive', 28: 'Automotive', 29: 'Automotive', 30: 'Automotive', 31: 'Automotive', 32: 'Automotive', 33: 'Automotive', 34: 'Automotive', 35: 'Automotive', 36: 'Biotechnology and Pharmaceuticals', 37: 'Biotechnology and Pharmaceuticals', 38: 'Biotechnology and Pharmaceuticals', 39: 'Biotechnology and Pharmaceuticals', 40: 'Biotechnology and Pharmaceuticals', 41: 'Biotechnology and Pharmaceuticals', 42: 'Biotechnology and Pharmaceuticals', 43: 'Biotechnology and Pharmaceuticals', 44: 'Biotechnology and Pharmaceuticals', 45: 'Biotechnology and Pharmaceuticals', 46: 'Biotechnology and Pharmaceuticals', 47: 'Biotechnology and Pharmaceuticals', 48: 'Biotechnology and Pharmaceuticals', 49: 'Biotechnology and Pharmaceuticals', 50: 'Biotechnology and Pharmaceuticals', 51: 'Biotechnology and Pharmaceuticals', 52: 'Biotechnology and Pharmaceuticals', 53: 'Biotechnology and Pharmaceuticals', 54: 'Biotechnology and Pharmaceuticals', 55: 'Biotechnology and Pharmaceuticals', 56: 'Biotechnology and Pharmaceuticals', 57: 'Biotechnology and Pharmaceuticals', 58: 'Business (and Consumer) Services', 59: 'Business (and Consumer) Services', 60: 'Business (and Consumer) Services', 61: 'Business (and Consumer) Services', 62: 'Business (and Consumer) Services', 63: 'Business (and Consumer) Services', 64: 'Business (and Consumer) Services', 65: 'Chemicals', 66: 'Chemicals', 67: 'Chemicals', 68: 'Chemicals', 69: 'Chemicals', 70: 'Chemicals', 71: 'Chemicals', 72: 'Clothing, Footwear and Fashion', 73: 'Clothing, Footwear and Fashion', 74: 'Clothing, Footwear and Fashion', 75: 'Clothing, Footwear and Fashion', 76: 'Communications', 77: 'Communications', 78: 'Communications', 79: 'Communications', 80: 'Communications', 81: 'Communications', 82: 'Communications', 83: 'Communications', 84: 'Communications', 85: 'Communications', 86: 'Communications', 87: 'Communications', 88: 'Construction', 89: 'Creative and Media', 90: 'Creative and Media', 91: 'Creative and Media', 92: 'Creative and Media', 93: 'Creative and Media', 94: 'Creative and Media', 95: 'Creative and Media', 96: 'Creative and Media', 97: 'Creative and Media', 98: 'Creative and Media', 99: 'Creative and Media', 100: 'Creative and Media', 101: 'Creative and Media', 102: 'Creative and Media', 103: 'Creative and Media', 104: 'Creative and Media', 105: 'Creative and Media', 106: 'Creative and Media', 107: 'Creative and Media', 108: 'Creative and Media', 109: 'Creative and Media', 110: 'Creative and Media', 111: 'Creative and Media', 112: 'Creative and Media', 113: 'Creative and Media', 114: 'Creative and Media', 115: 'Creative and Media', 116: 'Creative and Media', 117: 'Creative and Media', 118: 'Creative and Media', 119: 'Creative and Media', 120: 'Creative and Media', 121: 'Defence', 122: 'Defence and Security', 123: 'Education and Training', 124: 'Electronics and IT Hardware', 125: 'Electronics and IT Hardware', 126: 'Electronics and IT Hardware', 127: 'Electronics and IT Hardware', 128: 'Electronics and IT Hardware', 129: 'Electronics and IT Hardware', 130: 'Electronics and IT Hardware', 131: 'Electronics and IT Hardware', 132: 'Electronics and IT Hardware', 133: 'Energy', 134: 'Environment', 135: 'Environment', 136: 'Environment', 137: 'Environment', 138: 'Environment', 139: 'Environment', 140: 'Environment', 141: 'Environment', 142: 'Environment', 143: 'Environment', 144: 'Environment', 145: 'Environment', 146: 'Environment and Water', 147: 'Financial Services (including Professional Services)', 148: 'Financial Services (including Professional Services)', 149: 'Financial Services (including Professional Services)', 150: 'Financial Services (including Professional Services)', 151: 'Financial Services (including Professional Services)', 152: 'Financial Services (including Professional Services)', 153: 'Financial Services (including Professional Services)', 154: 'Financial Services (including Professional Services)', 155: 'Financial Services (including Professional Services)', 156: 'Financial Services (including Professional Services)', 157: 'Financial Services (including Professional Services)', 158: 'Financial Services (including Professional Services)', 159: 'Financial Services (including Professional Services)', 160: 'Financial Services (including Professional Services)', 161: 'Financial Services (including Professional Services)', 162: 'Financial Services (including Professional Services)', 163: 'Financial Services (including Professional Services)', 164: 'Financial Services (including Professional Services)', 165: 'Financial Services (including Professional Services)', 166: 'Financial Services (including Professional Services)', 167: 'Financial Services (including Professional Services)', 168: 'Financial Services (including Professional Services)', 169: 'Financial Services (including Professional Services)', 170: 'Food and Drink', 171: 'Food and Drink', 172: 'Food and Drink', 173: 'Food and Drink', 174: 'Food and Drink', 175: 'Food and Drink', 176: 'Food and Drink', 177: 'Food and Drink', 178: 'Food and Drink', 179: 'Food and Drink', 180: 'Food and Drink', 181: 'Food and Drink', 182: 'Food and Drink', 183: 'Giftware, Jewellery and Tableware', 184: 'Global Sports Projects', 185: 'Global Sports Projects', 186: 'Healthcare and Medical', 187: 'Healthcare and Medical', 188: 'Healthcare and Medical', 189: 'Healthcare and Medical', 190: 'Healthcare and Medical', 191: 'Healthcare and Medical', 192: 'Healthcare and Medical', 193: 'Healthcare and Medical', 194: 'Healthcare and Medical', 195: 'Healthcare and Medical', 196: 'Healthcare and Medical', 197: 'Healthcare and Medical', 198: 'Healthcare and Medical', 199: 'Healthcare and Medical', 200: 'Healthcare and Medical', 201: 'Healthcare and Medical', 202: 'Healthcare and Medical', 203: 'Healthcare and Medical', 204: 'Healthcare and Medical', 205: 'Household Goods, Furniture and Furnishings', 206: 'ICT', 207: 'Leisure and Tourism', 208: 'Leisure and Tourism', 209: 'Leisure and Tourism', 210: 'Leisure and Tourism', 211: 'Leisure and Tourism', 212: 'Life Sciences', 213: 'Marine', 214: 'Mass Transport', 215: 'Mechanical Electrical and Process Engineering', 216: 'Metallurgical Process Plant', 217: 'Metals, Minerals and Materials', 218: 'Metals, Minerals and Materials', 219: 'Metals, Minerals and Materials', 220: 'Metals, Minerals and Materials', 221: 'Metals, Minerals and Materials', 222: 'Metals, Minerals and Materials', 223: 'Metals, Minerals and Materials', 224: 'Mining', 225: '', 226: 'Oil and Gas', 227: 'Ports and Logistics', 228: 'Power', 229: 'Power', 230: 'Power', 231: 'Railways', 232: 'Renewable Energy', 233: 'Renewable Energy', 234: 'Renewable Energy', 235: 'Renewable Energy', 236: 'Renewable Energy', 237: 'Renewable Energy', 238: 'Renewable Energy', 239: 'Renewable Energy', 240: 'Renewable Energy', 241: 'Renewable Energy', 242: 'Retail', 243: 'Security', 244: 'Security', 245: 'Software and Computer Services Business to Business (B2B)', 246: 'Software and Computer Services Business to Business (B2B)', 247: 'Software and Computer Services Business to Business (B2B)', 248: 'Software and Computer Services Business to Business (B2B)', 249: 'Software and Computer Services Business to Business (B2B)', 250: 'Software and Computer Services Business to Business (B2B)', 251: 'Software and Computer Services Business to Business (B2B)', 252: 'Software and Computer Services Business to Business (B2B)', 253: 'Software and Computer Services Business to Business (B2B)', 254: 'Software and Computer Services Business to Business (B2B)', 256: 'Textiles, Interior Textiles and Carpets', 257: 'Water'}
    non_cdms = [6, 225]

    for sector_id, parent in sector_to_parent_sector.items():
        if sector_id in non_cdms:
            continue
        sector = Sector.objects.get(id=sector_id)
        parent_sector = ParentSector.objects.get(name=parent)
        sector.parent_sector = parent_sector
        sector.save()


def update_targets__0017(apps, schema_editor):
    Target = apps.get_model('mi', 'Target')
    ParentSector = apps.get_model('mi', 'ParentSector')

    hvc_parent_sector_map = {'E150': 'Defence and Security', 'E076': 'Life Sciences', 'E164': 'Digital Economy', 'E021': 'Defence and Security', 'E147': 'Railways', 'E041': 'Construction', 'E142': 'Airports', 'E025': 'Consumer Goods & Retail', 'E079': 'Defence and Security', 'E143': 'Water', 'E148': 'Marine', 'E063': 'Automotive', 'E145': 'Defence and Security', 'E014': 'Oil and Gas', 'E004': 'Consumer Goods & Retail', 'E058': 'Creative Industries', 'E134': 'Education', 'E098': 'Mining', 'E080': 'Aerospace', 'E060': 'Airports', 'E160': 'Financial Services', 'E139': 'Aerospace', 'E178': 'Airports', 'E187': 'Creative Industries', 'E095': 'Financial Services', 'E209': 'Defence and Security', 'E044': 'Defence and Security', 'E131': 'Aerospace', 'E140': 'Defence and Security', 'E009': 'Defence and Security', 'E002': 'Defence and Security', 'E068': 'Defence and Security', 'E126': 'Construction', 'E108': 'Defence and Security', 'E179': 'Construction', 'E054': 'Food and Drink', 'E166': 'Nuclear', 'E144': 'Aerospace', 'E102': 'Aerospace', 'E097': 'Healthcare', 'E110': 'Airports', 'E119': 'Renewable Energy', 'E195': 'Defence and Security', 'E003': 'Food and Drink', 'E181': 'Life Sciences', 'E022': 'Marine', 'E006': 'Financial Services', 'E075': 'Construction', 'E064': 'Agritech', 'E184': 'Automotive', 'E091': 'Oil and Gas', 'E149': 'Consumer Goods & Retail', 'E109': 'Digital Economy', 'E066': 'Consumer Goods & Retail', 'E056': 'Mining', 'E194': 'Life Sciences', 'E154': 'Railways', 'E180': 'Water', 'E023': 'Aerospace', 'E125': 'Digital Economy', 'E115': 'Professional Business Services', 'E116': 'Railways', 'E052': 'Defence and Security', 'E117': 'Oil and Gas', 'E043': 'Renewable Energy', 'E217': 'Mining', 'E033': 'Healthcare', 'E078': 'Aerospace', 'E018': 'Defence and Security', 'E072': 'Financial Services', 'E156': 'Consumer Goods & Retail', 'E093': 'Healthcare', 'E129': 'Defence and Security', 'E130': 'Sports Economy', 'E112': 'Nuclear', 'E190': 'Oil and Gas', 'E173': 'Consumer Goods & Retail', 'E163': 'Defence and Security', 'E138': 'Water', 'E215': 'Defence and Security', 'E065': 'Chemicals', 'E106': 'Life Sciences', 'E011': 'Defence and Security', 'E020': 'Nuclear', 'E124': 'Aid Funded Business', 'E103': 'Defence and Security', 'E121': 'Oil and Gas', 'E047': 'Nuclear', 'E034': 'Airports', 'E159': 'Defence and Security', 'E015': 'Defence and Security', 'E137': 'Railways', 'E027': 'Digital Economy', 'E210': 'Mining', 'E045': 'Aerospace', 'E031': 'Financial Services', 'E019': 'Financial Services', 'E055': 'Life Sciences', 'E081': 'Oil and Gas', 'E037': 'Railways', 'E061': 'Railways', 'E029': 'Nuclear', 'E059': 'Education', 'E213': 'Aerospace', 'E192': 'Construction', 'E133': 'Defence and Security', 'E039': 'Sports Economy', 'E010': 'Aid Funded Business', 'E016': 'Railways', 'E094': 'Education', 'E012': 'Marine', 'E099': 'Oil and Gas', 'E062': 'Aerospace', 'E053': 'Nuclear', 'E157': 'Chemicals', 'E092': 'Defence and Security', 'E174': 'Creative Industries', 'E177': 'Healthcare', 'E104': 'Digital Economy', 'E013': 'Defence and Security', 'E211': 'Mining', 'E136': 'Healthcare', 'E153': 'Agritech', 'E087': 'Nuclear', 'E073': 'Food and Drink', 'E168': 'Healthcare', 'E175': 'Defence and Security', 'E128': 'Financial Services', 'E122': 'Defence and Security', 'E071': 'Renewable Energy', 'E089': 'Life Sciences', 'E051': 'Consumer Goods & Retail', 'E120': 'Defence and Security', 'E005': 'Digital Economy', 'E008': 'Defence and Security', 'E067': 'Creative Industries', 'E069': 'Digital Economy', 'E214': 'Advanced Manufacturing', 'E096': 'Food and Drink', 'E024': 'Automotive', 'E170': 'Aerospace', 'E101': 'Water', 'E049': 'Automotive', 'E189': 'Digital Economy', 'E135': 'Oil and Gas', 'E085': 'Defence and Security', 'E032': 'Food and Drink', 'E146': 'Education', 'E028': 'Education', 'E001': 'Automotive', 'E158': 'Consumer Goods & Retail', 'E183': 'Aid Funded Business', 'E182': 'Aerospace', 'E046': 'Defence and Security', 'E111': 'Education', 'E165': 'Defence and Security', 'E176': 'Food and Drink', 'E171': 'Agritech', 'E155': 'Chemicals', 'E070': 'Oil and Gas', 'E169': 'Airports', 'E035': 'Construction', 'E118': 'Food and Drink', 'E152': 'Life Sciences', 'E040': 'Defence and Security', 'E007': 'Oil and Gas', 'E141': 'Digital Economy', 'E086': 'Digital Economy', 'E151': 'Digital Economy', 'E090': 'Sports Economy', 'E083': 'Consumer Goods & Retail', 'E162': 'Aerospace', 'E074': 'Healthcare', 'E123': 'Oil and Gas', 'E077': 'Sports Economy', 'E082': 'Water', 'E105': 'Defence and Security', 'E127': 'Digital Economy', 'E188': 'Defence and Security', 'E114': 'Construction', 'E212': 'Renewable Energy', 'E050': 'Chemicals', 'E048': 'Food and Drink', 'E084': 'Aerospace', 'E167': 'Financial Services', 'E161': 'Aid Funded Business', 'E100': 'Railways', 'E038': 'Life Sciences', 'E042': 'Oil and Gas', 'E132': 'Consumer Goods & Retail', 'E185': 'Chemicals', 'E191': 'Financial Services', 'E186': 'Consumer Goods & Retail', 'E030': 'Renewable Energy', 'E172': 'Aerospace', 'E107': 'Automotive', 'E026': 'Creative Industries', 'E088': 'Food and Drink', 'E017': 'Automotive'}
    for hvc, parent in hvc_parent_sector_map.items():
        target = Target.objects.get(campaign_id=hvc)
        target.parent_sector = ParentSector.objects.get(name=parent)
        target.save()


def add_hvc_group__0018(apps, schema_editor):
    HVCGroup = apps.get_model('mi', 'HVCGroup')
    SectorTeam = apps.get_model('mi', 'SectorTeam')

    hvc_group_to_sector_team = {
        "Advanced Manufacturing": "Advanced Manufacturing",
        "Advanced Manufacturing - Marine": "Advanced Manufacturing",
        "Aerospace": "Aerospace",
        "Automotive": "Automotive",
        "Bio-economy - Agritech": "Bio-economy",
        "Bio-economy - Chemicals": "Bio-economy",
        "Consumer Goods & Retail": "Consumer & Creative",
        "Creative Industries": "Consumer & Creative",
        "Defence": "Defence & Security",
        "Digital Economy": "Technology",
        "Education": "Education",
        "Energy - Nuclear": "Energy",
        "Energy - Offshore Wind": "Energy",
        "Energy - Oil & Gas": "Energy",
        "Energy - Renewables": "Energy",
        "Financial Services": "Financial & Professional Services",
        "Food & Drink": "Food & Drink",
        "Healthcare": "Healthcare",
        "Infrastructure - Aid Funded Business": "Infrastructure",
        "Infrastructure - Airports": "Infrastructure",
        "Infrastructure - Construction": "Infrastructure",
        "Infrastructure - Mining": "Infrastructure",
        "Infrastructure - Rail": "Infrastructure",
        "Infrastructure - Water": "Infrastructure",
        "Life Sciences": "Life Sciences",
        "Professional Services": "Financial & Professional Services",
        "Sports Economy": "Consumer & Creative",
        "Strategic Campaigns": "Defence & Security"
    }

    hvc_groups = {
        1: 'Advanced Manufacturing',
        2: 'Advanced Manufacturing - Marine',
        3: 'Aerospace',
        4: 'Automotive',
        5: 'Bio-economy - Agritech',
        6: 'Bio-economy - Chemicals',
        7: 'Consumer Goods & Retail',
        8: 'Creative Industries',
        9: 'Defence',
        10: 'Digital Economy',
        11: 'Education',
        12: 'Energy - Nuclear',
        13: 'Energy - Offshore Wind',
        14: 'Energy - Oil & Gas',
        15: 'Energy - Renewables',
        16: 'Financial Services',
        17: 'Food & Drink',
        18: 'Healthcare',
        19: 'Infrastructure - Aid Funded Business',
        20: 'Infrastructure - Airports',
        21: 'Infrastructure - Construction',
        22: 'Infrastructure - Mining',
        23: 'Infrastructure - Rail',
        24: 'Infrastructure - Water',
        25: 'Life Sciences',
        26: 'Professional Services',
        27: 'Sports Economy',
        28: 'Strategic Campaigns'
    }
    for group_id, group_name in hvc_groups.items():
        team = hvc_group_to_sector_team[group_name]
        sector_team = SectorTeam.objects.get(name=team)
        HVCGroup(id=group_id, name=group_name, sector_team=sector_team).save()


def update_targets__0019(apps, schema_editor):
    Target = apps.get_model('mi', 'Target')
    HVCGroup = apps.get_model('mi', 'HVCGroup')

    hvc_group_to_hvc = {
        "E001": "Automotive",
        "E002": "Defence",
        "E003": "Food & Drink",
        "E004": "Consumer Goods & Retail",
        "E005": "Digital Economy",
        "E006": "Financial Services",
        "E007": "Energy - Oil & Gas",
        "E008": "Defence",
        "E009": "Defence",
        "E010": "Infrastructure - Aid Funded Business",
        "E011": "Defence",
        "E012": "Advanced Manufacturing",
        "E013": "Defence",
        "E014": "Energy - Oil & Gas",
        "E015": "Defence",
        "E016": "Infrastructure - Rail",
        "E017": "Automotive",
        "E018": "Defence",
        "E019": "Financial Services",
        "E020": "Energy - Nuclear",
        "E021": "Defence",
        "E022": "Advanced Manufacturing",
        "E023": "Aerospace",
        "E024": "Automotive",
        "E025": "Consumer Goods & Retail",
        "E026": "Creative Industries",
        "E027": "Digital Economy",
        "E028": "Education",
        "E029": "Energy - Nuclear",
        "E030": "Energy - Renewables",
        "E031": "Financial Services",
        "E032": "Food & Drink",
        "E033": "Healthcare",
        "E034": "Infrastructure - Airports",
        "E035": "Infrastructure - Construction",
        "E037": "Infrastructure - Rail",
        "E038": "Life Sciences",
        "E039": "Sports Economy",
        "E040": "Defence",
        "E041": "Infrastructure - Construction",
        "E042": "Energy - Oil & Gas",
        "E043": "Energy - Renewables",
        "E044": "Defence",
        "E045": "Aerospace",
        "E046": "Defence",
        "E047": "Energy - Nuclear",
        "E048": "Food & Drink",
        "E049": "Automotive",
        "E050": "Bio-economy - Chemicals",
        "E051": "Consumer Goods & Retail",
        "E052": "Defence",
        "E053": "Energy - Nuclear",
        "E054": "Food & Drink",
        "E055": "Life Sciences",
        "E056": "Infrastructure - Mining",
        "E058": "Creative Industries",
        "E059": "Education",
        "E060": "Infrastructure - Airports",
        "E061": "Infrastructure - Rail",
        "E062": "Aerospace",
        "E063": "Automotive",
        "E064": "Bio-economy - Agritech",
        "E065": "Bio-economy - Chemicals",
        "E066": "Consumer Goods & Retail",
        "E067": "Creative Industries",
        "E068": "Defence",
        "E069": "Digital Economy",
        "E070": "Energy - Oil & Gas",
        "E071": "Energy - Renewables",
        "E072": "Financial Services",
        "E073": "Food & Drink",
        "E074": "Healthcare",
        "E075": "Infrastructure - Construction",
        "E076": "Life Sciences",
        "E077": "Sports Economy",
        "E078": "Aerospace",
        "E079": "Defence",
        "E080": "Aerospace",
        "E081": "Energy - Oil & Gas",
        "E082": "Infrastructure - Water",
        "E083": "Consumer Goods & Retail",
        "E084": "Aerospace",
        "E085": "Defence",
        "E086": "Digital Economy",
        "E087": "Energy - Nuclear",
        "E088": "Food & Drink",
        "E089": "Life Sciences",
        "E090": "Sports Economy",
        "E091": "Energy - Oil & Gas",
        "E092": "Defence",
        "E093": "Healthcare",
        "E094": "Education",
        "E095": "Financial Services",
        "E096": "Food & Drink",
        "E097": "Healthcare",
        "E098": "Infrastructure - Mining",
        "E099": "Energy - Oil & Gas",
        "E100": "Infrastructure - Rail",
        "E101": "Infrastructure - Water",
        "E102": "Aerospace",
        "E103": "Defence",
        "E104": "Digital Economy",
        "E105": "Defence",
        "E106": "Life Sciences",
        "E107": "Automotive",
        "E108": "Defence",
        "E109": "Digital Economy",
        "E110": "Infrastructure - Airports",
        "E111": "Education",
        "E112": "Energy - Nuclear",
        "E114": "Infrastructure - Construction",
        "E115": "Professional Services",
        "E116": "Infrastructure - Rail",
        "E117": "Energy - Oil & Gas",
        "E118": "Food & Drink",
        "E119": "Energy - Offshore Wind",
        "E120": "Defence",
        "E121": "Energy - Oil & Gas",
        "E122": "Defence",
        "E123": "Energy - Oil & Gas",
        "E124": "Infrastructure - Aid Funded Business",
        "E125": "Digital Economy",
        "E126": "Infrastructure - Construction",
        "E127": "Digital Economy",
        "E128": "Financial Services",
        "E129": "Defence",
        "E130": "Sports Economy",
        "E131": "Aerospace",
        "E132": "Consumer Goods & Retail",
        "E133": "Defence",
        "E134": "Education",
        "E135": "Energy - Oil & Gas",
        "E136": "Healthcare",
        "E137": "Infrastructure - Rail",
        "E138": "Infrastructure - Water",
        "E139": "Aerospace",
        "E140": "Defence",
        "E141": "Digital Economy",
        "E142": "Infrastructure - Airports",
        "E143": "Infrastructure - Water",
        "E144": "Aerospace",
        "E145": "Defence",
        "E146": "Education",
        "E147": "Infrastructure - Rail",
        "E148": "Advanced Manufacturing",
        "E149": "Consumer Goods & Retail",
        "E150": "Defence",
        "E151": "Digital Economy",
        "E152": "Life Sciences",
        "E153": "Bio-economy - Agritech",
        "E154": "Infrastructure - Rail",
        "E155": "Bio-economy - Chemicals",
        "E156": "Consumer Goods & Retail",
        "E157": "Bio-economy - Chemicals",
        "E158": "Consumer Goods & Retail",
        "E159": "Defence",
        "E160": "Financial Services",
        "E161": "Infrastructure - Aid Funded Business",
        "E162": "Aerospace",
        "E163": "Defence",
        "E164": "Digital Economy",
        "E165": "Defence",
        "E166": "Energy - Nuclear",
        "E167": "Financial Services",
        "E168": "Healthcare",
        "E169": "Infrastructure - Airports",
        "E170": "Aerospace",
        "E171": "Bio-economy - Agritech",
        "E172": "Aerospace",
        "E173": "Consumer Goods & Retail",
        "E174": "Creative Industries",
        "E175": "Defence",
        "E176": "Food & Drink",
        "E177": "Healthcare",
        "E178": "Infrastructure - Airports",
        "E179": "Infrastructure - Construction",
        "E180": "Infrastructure - Water",
        "E181": "Life Sciences",
        "E182": "Aerospace",
        "E183": "Infrastructure - Aid Funded Business",
        "E184": "Automotive",
        "E185": "Bio-economy - Chemicals",
        "E186": "Consumer Goods & Retail",
        "E187": "Creative Industries",
        "E188": "Defence",
        "E189": "Digital Economy",
        "E190": "Energy - Oil & Gas",
        "E191": "Financial Services",
        "E192": "Infrastructure - Construction",
        "E194": "Life Sciences",
        "E195": "Strategic Campaigns",
        "E209": "Defence",
        "E210": "Infrastructure - Mining",
        "E211": "Infrastructure - Mining",
        "E212": "Energy - Renewables",
        "E213": "Aerospace",
        "E214": "Advanced Manufacturing",
        "E215": "Defence",
        "E217": "Infrastructure - Mining"
    }
    for hvc, group in hvc_group_to_hvc.items():
        target = Target.objects.get(campaign_id=hvc)
        target.hvc_group = HVCGroup.objects.get(name=group)
        target.save()


def clear_sector_parents__0021(apps, schema_editor):
    Sector = apps.get_model('mi', 'Sector')
    sectors = Sector.objects.all()
    for sector in sectors:
        sector.parent_sector = None
        sector.save()


def delete_parent_sectors__0022(apps, schema_editor):
    ParentSector = apps.get_model('mi', 'ParentSector')
    ParentSector.objects.all().delete()


def add_parent_sectors__0022(apps, schema_editor):
    ParentSector = apps.get_model('mi', 'ParentSector')
    SectorTeam = apps.get_model('mi', 'SectorTeam')

    parent_sectors = {
        1: "Advanced Engineering",
        2: "Aerospace",
        3: "Agriculture, Horticulture and Fisheries",
        4: "Airports",
        5: "Automotive",
        6: "Biotechnology and Pharmaceuticals",
        7: "Business (and Consumer) Services",
        8: "Chemicals",
        9: "Clothing, Footwear and Fashion",
        10: "Communications",
        11: "Construction",
        12: "Creative and Media",
        13: "Defence",
        14: "Defence and Security",
        15: "Education and Training",
        16: "Electronics and IT Hardware",
        17: "Energy",
        18: "Environment",
        19: "Environment and Water",
        20: "Financial Services (including Professional Services)",
        21: "Food and Drink",
        22: "Giftware, Jewellery and Tableware",
        23: "Global Sports Projects",
        24: "Healthcare and Medical",
        25: "Household Goods, Furniture and Furnishings",
        26: "ICT",
        27: "Leisure and Tourism",
        28: "Life Sciences",
        29: "Marine",
        30: "Mass Transport",
        31: "Mechanical Electrical and Process Engineering",
        32: "Metallurgical Process Plant",
        33: "Metals, Minerals and Materials",
        34: "Mining",
        35: "Oil and Gas",
        36: "Ports and Logistics",
        37: "Power",
        38: "Railways",
        39: "Renewable Energy",
        40: "Retail",
        41: "Security",
        42: "Software and Computer Services Business to Business (B2B)",
        43: "Textiles, Interior Textiles and Carpets",
        44: "Water"
    }
    parent_sector_to_sector_team = {
        "Advanced Engineering": "Advanced Manufacturing",
        "Aerospace": "Aerospace",
        "Agriculture, Horticulture and Fisheries": "Bio-economy",
        "Airports": "Infrastructure",
        "Automotive": "Automotive",
        "Biotechnology and Pharmaceuticals": "Life Sciences",
        "Business (and Consumer) Services": "Financial & Professional Services",
        "Chemicals": "Bio-economy",
        "Clothing, Footwear and Fashion": "Consumer & Creative",
        "Communications": "Technology",
        "Construction": "Infrastructure",
        "Creative and Media": "Consumer & Creative",
        "Defence": "Defence & Security",
        "Defence and Security": "Defence & Security",
        "Education and Training": "Education",
        "Electronics and IT Hardware": "Technology",
        "Energy": "Energy",
        "Environment": "Infrastructure",
        "Environment and Water": "Infrastructure",
        "Financial Services (including Professional Services)": "Financial & Professional Services",
        "Food and Drink": "Food & Drink",
        "Giftware, Jewellery and Tableware": "Consumer & Creative",
        "Global Sports Projects": "Consumer & Creative",
        "Healthcare and Medical": "Healthcare",
        "Household Goods, Furniture and Furnishings": "Consumer & Creative",
        "ICT": "Technology",
        "Leisure and Tourism": "Consumer & Creative",
        "Life Sciences": "Life Sciences",
        "Marine": "Advanced Manufacturing",
        "Mass Transport": "Infrastructure",
        "Mechanical Electrical and Process Engineering": "Advanced Manufacturing",
        "Metallurgical Process Plant": "Advanced Manufacturing",
        "Metals, Minerals and Materials": "Infrastructure",
        "Mining": "Infrastructure",
        "Oil and Gas": "Energy",
        "Ports and Logistics": "Infrastructure",
        "Power": "Energy",
        "Railways": "Infrastructure",
        "Renewable Energy": "Energy",
        "Retail": "Consumer & Creative",
        "Security": "Defence & Security",
        "Software and Computer Services Business to Business (B2B)": "Technology",
        "Textiles, Interior Textiles and Carpets": "Consumer & Creative",
        "Water": "Infrastructure"
    }

    for parent_id, parent_name in parent_sectors.items():
        team = parent_sector_to_sector_team[parent_name]
        sector_team = SectorTeam.objects.get(name=team)
        ParentSector(id=parent_id, name=parent_name, sector_team=sector_team).save()


def update_sectors__0024(apps, schema_editor):
    Sector = apps.get_model('mi', 'Sector')
    ParentSector = apps.get_model('mi', 'ParentSector')

    sector_to_parent_sector = {
        1: "Advanced Engineering",
        2: "Aerospace",
        3: "Aerospace",
        4: "Aerospace",
        5: "Aerospace",
        7: "Aerospace",
        8: "Aerospace",
        9: "Aerospace",
        10: "Aerospace",
        11: "Aerospace",
        12: "Aerospace",
        13: "Agriculture, Horticulture and Fisheries",
        14: "Airports",
        15: "Automotive",
        16: "Automotive",
        17: "Automotive",
        18: "Automotive",
        19: "Automotive",
        20: "Automotive",
        21: "Automotive",
        22: "Automotive",
        23: "Automotive",
        24: "Automotive",
        25: "Automotive",
        26: "Automotive",
        27: "Automotive",
        28: "Automotive",
        29: "Automotive",
        30: "Automotive",
        31: "Automotive",
        32: "Automotive",
        33: "Automotive",
        34: "Automotive",
        35: "Automotive",
        36: "Biotechnology and Pharmaceuticals",
        37: "Biotechnology and Pharmaceuticals",
        38: "Biotechnology and Pharmaceuticals",
        39: "Biotechnology and Pharmaceuticals",
        40: "Biotechnology and Pharmaceuticals",
        41: "Biotechnology and Pharmaceuticals",
        42: "Biotechnology and Pharmaceuticals",
        43: "Biotechnology and Pharmaceuticals",
        44: "Biotechnology and Pharmaceuticals",
        45: "Biotechnology and Pharmaceuticals",
        46: "Biotechnology and Pharmaceuticals",
        47: "Biotechnology and Pharmaceuticals",
        48: "Biotechnology and Pharmaceuticals",
        49: "Biotechnology and Pharmaceuticals",
        50: "Biotechnology and Pharmaceuticals",
        51: "Biotechnology and Pharmaceuticals",
        52: "Biotechnology and Pharmaceuticals",
        53: "Biotechnology and Pharmaceuticals",
        54: "Biotechnology and Pharmaceuticals",
        55: "Biotechnology and Pharmaceuticals",
        56: "Biotechnology and Pharmaceuticals",
        57: "Biotechnology and Pharmaceuticals",
        58: "Business (and Consumer) Services",
        59: "Business (and Consumer) Services",
        60: "Business (and Consumer) Services",
        61: "Business (and Consumer) Services",
        62: "Business (and Consumer) Services",
        63: "Business (and Consumer) Services",
        64: "Business (and Consumer) Services",
        65: "Chemicals",
        66: "Chemicals",
        67: "Chemicals",
        68: "Chemicals",
        69: "Chemicals",
        70: "Chemicals",
        71: "Chemicals",
        72: "Clothing, Footwear and Fashion",
        73: "Clothing, Footwear and Fashion",
        74: "Clothing, Footwear and Fashion",
        75: "Clothing, Footwear and Fashion",
        76: "Communications",
        77: "Communications",
        78: "Communications",
        79: "Communications",
        80: "Communications",
        81: "Communications",
        82: "Communications",
        83: "Communications",
        84: "Communications",
        85: "Communications",
        86: "Communications",
        87: "Communications",
        88: "Construction",
        89: "Creative and Media",
        90: "Creative and Media",
        91: "Creative and Media",
        92: "Creative and Media",
        93: "Creative and Media",
        94: "Creative and Media",
        95: "Creative and Media",
        96: "Creative and Media",
        97: "Creative and Media",
        98: "Creative and Media",
        99: "Creative and Media",
        100: "Creative and Media",
        101: "Creative and Media",
        102: "Creative and Media",
        103: "Creative and Media",
        104: "Creative and Media",
        105: "Creative and Media",
        106: "Creative and Media",
        107: "Creative and Media",
        108: "Creative and Media",
        109: "Creative and Media",
        110: "Creative and Media",
        111: "Creative and Media",
        112: "Creative and Media",
        113: "Creative and Media",
        114: "Creative and Media",
        115: "Creative and Media",
        116: "Creative and Media",
        117: "Creative and Media",
        118: "Creative and Media",
        119: "Creative and Media",
        120: "Creative and Media",
        121: "Defence",
        122: "Defence and Security",
        123: "Education and Training",
        124: "Electronics and IT Hardware",
        125: "Electronics and IT Hardware",
        126: "Electronics and IT Hardware",
        127: "Electronics and IT Hardware",
        128: "Electronics and IT Hardware",
        129: "Electronics and IT Hardware",
        130: "Electronics and IT Hardware",
        131: "Electronics and IT Hardware",
        132: "Electronics and IT Hardware",
        133: "Energy",
        134: "Environment",
        135: "Environment",
        136: "Environment",
        137: "Environment",
        138: "Environment",
        139: "Environment",
        140: "Environment",
        141: "Environment",
        142: "Environment",
        143: "Environment",
        144: "Environment",
        145: "Environment",
        146: "Environment and Water",
        147: "Financial Services (including Professional Services)",
        148: "Financial Services (including Professional Services)",
        149: "Financial Services (including Professional Services)",
        150: "Financial Services (including Professional Services)",
        151: "Financial Services (including Professional Services)",
        152: "Financial Services (including Professional Services)",
        153: "Financial Services (including Professional Services)",
        154: "Financial Services (including Professional Services)",
        155: "Financial Services (including Professional Services)",
        156: "Financial Services (including Professional Services)",
        157: "Financial Services (including Professional Services)",
        158: "Financial Services (including Professional Services)",
        159: "Financial Services (including Professional Services)",
        160: "Financial Services (including Professional Services)",
        161: "Financial Services (including Professional Services)",
        162: "Financial Services (including Professional Services)",
        163: "Financial Services (including Professional Services)",
        164: "Financial Services (including Professional Services)",
        165: "Financial Services (including Professional Services)",
        166: "Financial Services (including Professional Services)",
        167: "Financial Services (including Professional Services)",
        168: "Financial Services (including Professional Services)",
        169: "Financial Services (including Professional Services)",
        170: "Food and Drink",
        171: "Food and Drink",
        172: "Food and Drink",
        173: "Food and Drink",
        174: "Food and Drink",
        175: "Food and Drink",
        176: "Food and Drink",
        177: "Food and Drink",
        178: "Food and Drink",
        179: "Food and Drink",
        180: "Food and Drink",
        181: "Food and Drink",
        182: "Food and Drink",
        183: "Giftware, Jewellery and Tableware",
        184: "Global Sports Projects",
        185: "Global Sports Projects",
        186: "Healthcare and Medical",
        187: "Healthcare and Medical",
        188: "Healthcare and Medical",
        189: "Healthcare and Medical",
        190: "Healthcare and Medical",
        191: "Healthcare and Medical",
        192: "Healthcare and Medical",
        193: "Healthcare and Medical",
        194: "Healthcare and Medical",
        195: "Healthcare and Medical",
        196: "Healthcare and Medical",
        197: "Healthcare and Medical",
        198: "Healthcare and Medical",
        199: "Healthcare and Medical",
        200: "Healthcare and Medical",
        201: "Healthcare and Medical",
        202: "Healthcare and Medical",
        203: "Healthcare and Medical",
        204: "Healthcare and Medical",
        205: "Household Goods, Furniture and Furnishings",
        206: "ICT",
        207: "Leisure and Tourism",
        208: "Leisure and Tourism",
        209: "Leisure and Tourism",
        210: "Leisure and Tourism",
        211: "Leisure and Tourism",
        212: "Life Sciences",
        213: "Marine",
        214: "Mass Transport",
        215: "Mechanical Electrical and Process Engineering",
        216: "Metallurgical Process Plant",
        217: "Metals, Minerals and Materials",
        218: "Metals, Minerals and Materials",
        219: "Metals, Minerals and Materials",
        220: "Metals, Minerals and Materials",
        221: "Metals, Minerals and Materials",
        222: "Metals, Minerals and Materials",
        223: "Metals, Minerals and Materials",
        224: "Mining",
        226: "Oil and Gas",
        227: "Ports and Logistics",
        228: "Power",
        229: "Power",
        230: "Power",
        231: "Railways",
        232: "Renewable Energy",
        233: "Renewable Energy",
        234: "Renewable Energy",
        235: "Renewable Energy",
        236: "Renewable Energy",
        237: "Renewable Energy",
        238: "Renewable Energy",
        239: "Renewable Energy",
        240: "Renewable Energy",
        241: "Renewable Energy",
        242: "Retail",
        243: "Security",
        244: "Security",
        245: "Software and Computer Services Business to Business (B2B)",
        246: "Software and Computer Services Business to Business (B2B)",
        247: "Software and Computer Services Business to Business (B2B)",
        248: "Software and Computer Services Business to Business (B2B)",
        249: "Software and Computer Services Business to Business (B2B)",
        250: "Software and Computer Services Business to Business (B2B)",
        251: "Software and Computer Services Business to Business (B2B)",
        252: "Software and Computer Services Business to Business (B2B)",
        253: "Software and Computer Services Business to Business (B2B)",
        254: "Software and Computer Services Business to Business (B2B)",
        255: "Software and Computer Services Business to Business (B2B)",
        256: "Textiles, Interior Textiles and Carpets",
        257: "Water"
    }
    non_cdms = [6, 225]

    for sector_id, parent in sector_to_parent_sector.items():
        if sector_id in non_cdms:
            continue
        sector = Sector.objects.get(id=sector_id)
        parent_sector = ParentSector.objects.get(name=parent)
        sector.parent_sector = parent_sector
        sector.save()


def correct_targets__0025(apps, schema_editor):
    """
    Targets - HVC Groups mapping was incorrect for Marine, this corrects them
    """
    Target = apps.get_model('mi', 'Target')
    HVCGroup = apps.get_model('mi', 'HVCGroup')
    hvc_groups_corrections = {
        "E012": "Advanced Manufacturing - Marine",
        "E022": "Advanced Manufacturing - Marine",
        "E148": "Advanced Manufacturing - Marine",
    }
    for hvc, group in hvc_groups_corrections.items():
        target = Target.objects.get(campaign_id=hvc)
        target.hvc_group = HVCGroup.objects.get(name=group)
        target.save()


def add_financial_years__0031(apps, schema_editor):
    FinancialYear = apps.get_model('mi', 'FinancialYear')
    FinancialYear(id=2016, description="2016-17").save()
    FinancialYear(id=2017, description="2017-18").save()


def update_2016_targets_fy__0031(apps, schema_editor):
    Target = apps.get_model('mi', 'Target')
    FinancialYear = apps.get_model('mi', 'FinancialYear')
    for target in Target.objects.all():
        target.financial_year = FinancialYear.objects.get(id=2016)
        target.save()


def do_thing__0034(apps, schema_editor):
    Sector = apps.get_model('mi', 'Sector')
    SectorTeam = apps.get_model('mi', 'SectorTeam')

    sector_to_sector_team = {1: 'Advanced Manufacturing', 2: 'Aerospace', 3: 'Aerospace', 4: 'Aerospace', 5: 'Aerospace', 7: 'Aerospace', 8: 'Aerospace', 9: 'Aerospace', 10: 'Aerospace', 11: 'Aerospace', 12: 'Aerospace', 13: 'Bio-economy', 14: 'Infrastructure', 15: 'Automotive', 16: 'Automotive', 17: 'Automotive', 18: 'Automotive', 19: 'Automotive', 20: 'Automotive', 21: 'Automotive', 22: 'Automotive', 23: 'Automotive', 24: 'Automotive', 25: 'Automotive', 26: 'Automotive', 27: 'Automotive', 28: 'Automotive', 29: 'Automotive', 30: 'Automotive', 31: 'Automotive', 32: 'Automotive', 33: 'Automotive', 34: 'Automotive', 35: 'Automotive', 36: 'Life Sciences', 37: 'Life Sciences', 38: 'Life Sciences', 39: 'Life Sciences', 40: 'Life Sciences', 41: 'Life Sciences', 42: 'Life Sciences', 43: 'Life Sciences', 44: 'Life Sciences', 45: 'Life Sciences', 46: 'Life Sciences', 47: 'Life Sciences', 48: 'Life Sciences', 49: 'Life Sciences', 50: 'Life Sciences', 51: 'Life Sciences', 52: 'Life Sciences', 53: 'Life Sciences', 54: 'Life Sciences', 55: 'Life Sciences', 56: 'Life Sciences', 57: 'Life Sciences', 58: 'Financial & Professional Services', 59: 'Financial & Professional Services', 60: 'Financial & Professional Services', 61: 'Financial & Professional Services', 62: 'Financial & Professional Services', 63: 'Financial & Professional Services', 64: 'Financial & Professional Services', 65: 'Bio-economy', 66: 'Bio-economy', 67: 'Bio-economy', 68: 'Bio-economy', 69: 'Bio-economy', 70: 'Bio-economy', 71: 'Bio-economy', 72: 'Consumer & Creative', 73: 'Consumer & Creative', 74: 'Consumer & Creative', 75: 'Consumer & Creative', 76: 'Technology', 77: 'Technology', 78: 'Technology', 79: 'Technology', 80: 'Technology', 81: 'Technology', 82: 'Technology', 83: 'Technology', 84: 'Technology', 85: 'Technology', 86: 'Technology', 87: 'Technology', 88: 'Infrastructure', 89: 'Consumer & Creative', 90: 'Consumer & Creative', 91: 'Consumer & Creative', 92: 'Consumer & Creative', 93: 'Consumer & Creative', 94: 'Consumer & Creative', 95: 'Consumer & Creative', 96: 'Consumer & Creative', 97: 'Consumer & Creative', 98: 'Consumer & Creative', 99: 'Consumer & Creative', 100: 'Consumer & Creative', 101: 'Consumer & Creative', 102: 'Consumer & Creative', 103: 'Consumer & Creative', 104: 'Consumer & Creative', 105: 'Consumer & Creative', 106: 'Consumer & Creative', 107: 'Consumer & Creative', 108: 'Consumer & Creative', 109: 'Consumer & Creative', 110: 'Consumer & Creative', 111: 'Consumer & Creative', 112: 'Consumer & Creative', 113: 'Consumer & Creative', 114: 'Consumer & Creative', 115: 'Consumer & Creative', 116: 'Consumer & Creative', 117: 'Consumer & Creative', 118: 'Consumer & Creative', 119: 'Consumer & Creative', 120: 'Consumer & Creative', 121: 'Defence & Security', 122: 'Defence & Security', 123: 'Education', 124: 'Technology', 125: 'Technology', 126: 'Technology', 127: 'Technology', 128: 'Technology', 129: 'Technology', 130: 'Technology', 131: 'Technology', 132: 'Technology', 133: 'Energy', 134: 'Infrastructure', 135: 'Infrastructure', 136: 'Infrastructure', 137: 'Infrastructure', 138: 'Infrastructure', 139: 'Infrastructure', 140: 'Infrastructure', 141: 'Infrastructure', 142: 'Infrastructure', 143: 'Infrastructure', 144: 'Infrastructure', 145: 'Infrastructure', 146: 'Infrastructure', 147: 'Financial & Professional Services', 148: 'Financial & Professional Services', 149: 'Financial & Professional Services', 150: 'Financial & Professional Services', 151: 'Financial & Professional Services', 152: 'Financial & Professional Services', 153: 'Financial & Professional Services', 154: 'Financial & Professional Services', 155: 'Financial & Professional Services', 156: 'Financial & Professional Services', 157: 'Financial & Professional Services', 158: 'Financial & Professional Services', 159: 'Financial & Professional Services', 160: 'Financial & Professional Services', 161: 'Financial & Professional Services', 162: 'Financial & Professional Services', 163: 'Financial & Professional Services', 164: 'Financial & Professional Services', 165: 'Financial & Professional Services', 166: 'Financial & Professional Services', 167: 'Financial & Professional Services', 168: 'Financial & Professional Services', 169: 'Financial & Professional Services', 170: 'Food & Drink', 171: 'Food & Drink', 172: 'Food & Drink', 173: 'Food & Drink', 174: 'Food & Drink', 175: 'Food & Drink', 176: 'Food & Drink', 177: 'Food & Drink', 178: 'Food & Drink', 179: 'Food & Drink', 180: 'Food & Drink', 181: 'Food & Drink', 182: 'Food & Drink', 183: 'Consumer & Creative', 184: 'Consumer & Creative', 185: 'Consumer & Creative', 186: 'Healthcare', 187: 'Healthcare', 188: 'Healthcare', 189: 'Healthcare', 190: 'Healthcare', 191: 'Healthcare', 192: 'Healthcare', 193: 'Healthcare', 194: 'Healthcare', 195: 'Healthcare', 196: 'Healthcare', 197: 'Healthcare', 198: 'Healthcare', 199: 'Healthcare', 200: 'Healthcare', 201: 'Healthcare', 202: 'Healthcare', 203: 'Healthcare', 204: 'Healthcare', 205: 'Consumer & Creative', 206: 'Technology', 207: 'Consumer & Creative', 208: 'Consumer & Creative', 209: 'Consumer & Creative', 210: 'Consumer & Creative', 211: 'Consumer & Creative', 212: 'Life Sciences', 213: 'Advanced Manufacturing', 214: 'Infrastructure', 215: 'Advanced Manufacturing', 216: 'Advanced Manufacturing', 217: 'Infrastructure', 218: 'Infrastructure', 219: 'Infrastructure', 220: 'Infrastructure', 221: 'Infrastructure', 222: 'Infrastructure', 223: 'Infrastructure', 224: 'Infrastructure', 226: 'Energy', 227: 'Infrastructure', 228: 'Energy', 229: 'Energy', 230: 'Energy', 231: 'Infrastructure', 232: 'Energy', 233: 'Energy', 234: 'Energy', 235: 'Energy', 236: 'Energy', 237: 'Energy', 238: 'Energy', 239: 'Energy', 240: 'Energy', 241: 'Energy', 242: 'Consumer & Creative', 243: 'Defence & Security', 244: 'Defence & Security', 245: 'Technology', 246: 'Technology', 247: 'Technology', 248: 'Technology', 249: 'Technology', 250: 'Technology', 251: 'Technology', 252: 'Technology', 253: 'Technology', 254: 'Technology', 255: 'Technology', 256: 'Consumer & Creative', 257: 'Infrastructure'}
    non_cdms = [6, 225]

    for sector_id, sector in SECTORS:
        if sector_id in non_cdms:
            continue
        team = sector_to_sector_team[sector_id]
        sector_team = SectorTeam.objects.get(name=team)
        sector = Sector.objects.get(id=sector_id)
        sector.sector_team.add(sector_team)


def add_2017_mi_data__0035(apps, schema_editor):
    """
    Adds 2017 Targets, SectorTeams, HVCGroups. Doesn't add OverseasRegions as its schema is not final yet
    """
    SectorTeam = apps.get_model('mi', 'SectorTeam')
    HVCGroup = apps.get_model('mi', 'HVCGroup')
    Target = apps.get_model('mi', 'Target')
    FinancialYear = apps.get_model('mi', 'FinancialYear')
    targets = [{'hvc_code': 'E002', 'region': 'Australia-New Zealand', 'target': 50000000, 'sector_team': 'Defence & Security', 'hvc_group': 'Defence', 'country': 'KI'}, {'hvc_code': 'E005', 'region': 'Australia-New Zealand', 'target': 30000000, 'sector_team': 'Technology', 'hvc_group': 'Technology', 'country': 'WS'}, {'hvc_code': 'E006', 'region': 'Australia-New Zealand', 'target': 20000000, 'sector_team': 'Financial & Professional Services', 'hvc_group': 'Financial & Professional Services', 'country': 'PN'}, {'hvc_code': 'E007', 'region': 'Turkey and Caucasus', 'target': 20000000, 'sector_team': 'Energy', 'hvc_group': 'Energy - Oil & Gas', 'country': 'GE'}, {'hvc_code': 'E008', 'region': 'Middle East', 'target': 30000000, 'sector_team': 'Defence & Security', 'hvc_group': 'Defence', 'country': 'PS'}, {'hvc_code': 'E009', 'region': 'Nordic Baltic Network', 'target': 30000000, 'sector_team': 'Defence & Security', 'hvc_group': 'Defence', 'country': 'IS'}, {'hvc_code': 'E011', 'region': 'Western Europe', 'target': 40000000, 'sector_team': 'Defence & Security', 'hvc_group': 'Defence', 'country': 'CW'}, {'hvc_code': 'E012', 'region': 'Latin America', 'target': 20000000, 'sector_team': 'Advanced Manufacturing', 'hvc_group': 'Advanced Manufacturing', 'country': 'GT'}, {'hvc_code': 'E013', 'region': 'Latin America', 'target': 30000000, 'sector_team': 'Defence & Security', 'hvc_group': 'Defence', 'country': 'MX'}, {'hvc_code': 'E014', 'region': 'Latin America', 'target': 30000000, 'sector_team': 'Energy', 'hvc_group': 'Energy - Oil & Gas', 'country': 'CO'}, {'hvc_code': 'E015', 'region': 'North America', 'target': 50000000, 'sector_team': 'Defence & Security', 'hvc_group': 'Defence', 'country': 'BS'}, {'hvc_code': 'E016', 'region': 'North America', 'target': 20000000, 'sector_team': 'Infrastructure', 'hvc_group': 'Infrastructure - Rail', 'country': 'BS'}, {'hvc_code': 'E017', 'region': 'Central European Network', 'target': 30000000, 'sector_team': 'Automotive', 'hvc_group': 'Automotive', 'country': 'RS'}, {'hvc_code': 'E018', 'region': 'Central European Network', 'target': 10000000, 'sector_team': 'Defence & Security', 'hvc_group': 'Defence', 'country': 'MK'}, {'hvc_code': 'E019', 'region': 'Central European Network', 'target': 40000000, 'sector_team': 'Financial & Professional Services', 'hvc_group': 'Financial & Professional Services', 'country': 'SK'}, {'hvc_code': 'E020', 'region': 'Central European Network', 'target': 10000000, 'sector_team': 'Energy', 'hvc_group': 'Energy - Nuclear', 'country': 'MK'}, {'hvc_code': 'E021', 'region': 'Latin America', 'target': 20000000, 'sector_team': 'Defence & Security', 'hvc_group': 'Defence', 'country': 'EC'}, {'hvc_code': 'E022', 'region': 'China', 'target': 50000000, 'sector_team': 'Advanced Manufacturing', 'hvc_group': 'Advanced Manufacturing', 'country': 'CN'}, {'hvc_code': 'E023', 'region': 'China', 'target': 50000000, 'sector_team': 'Aerospace', 'hvc_group': 'Aerospace', 'country': 'HK'}, {'hvc_code': 'E024', 'region': 'China', 'target': 20000000, 'sector_team': 'Automotive', 'hvc_group': 'Automotive', 'country': 'MO'}, {'hvc_code': 'E025', 'region': 'China', 'target': 40000000, 'sector_team': 'Creative, Consumer and Sports', 'hvc_group': 'Consumer and Retail', 'country': 'CN'}, {'hvc_code': 'E026', 'region': 'China', 'target': 10000000, 'sector_team': 'Creative, Consumer and Sports', 'hvc_group': 'Creative', 'country': 'HK'}, {'hvc_code': 'E027', 'region': 'China', 'target': 10000000, 'sector_team': 'Technology', 'hvc_group': 'Technology', 'country': 'HK'}, {'hvc_code': 'E028', 'region': 'China', 'target': 10000000, 'sector_team': 'Education', 'hvc_group': 'Education', 'country': 'HK'}, {'hvc_code': 'E029', 'region': 'China', 'target': 10000000, 'sector_team': 'Energy', 'hvc_group': 'Energy - Nuclear', 'country': 'CN'}, {'hvc_code': 'E030', 'region': 'China', 'target': 30000000, 'sector_team': 'Energy', 'hvc_group': 'Energy - Renewables', 'country': 'HK'}, {'hvc_code': 'E031', 'region': 'China', 'target': 40000000, 'sector_team': 'Financial & Professional Services', 'hvc_group': 'Financial & Professional Services', 'country': 'HK'}, {'hvc_code': 'E032', 'region': 'China', 'target': 20000000, 'sector_team': 'Food & Drink', 'hvc_group': 'Food & Drink', 'country': 'MO'}, {'hvc_code': 'E033', 'region': 'China', 'target': 20000000, 'sector_team': 'Healthcare', 'hvc_group': 'Healthcare', 'country': 'MO'}, {'hvc_code': 'E034', 'region': 'China', 'target': 20000000, 'sector_team': 'Infrastructure', 'hvc_group': 'Infrastructure - Airports', 'country': 'HK'}, {'hvc_code': 'E035', 'region': 'China', 'target': 10000000, 'sector_team': 'Infrastructure', 'hvc_group': 'Infrastructure', 'country': 'MO'}, {'hvc_code': 'E037', 'region': 'China', 'target': 20000000, 'sector_team': 'Infrastructure', 'hvc_group': 'Infrastructure - Rail', 'country': 'HK'}, {'hvc_code': 'E038', 'region': 'China', 'target': 30000000, 'sector_team': 'Life Sciences', 'hvc_group': 'Life Sciences', 'country': 'CN'}, {'hvc_code': 'E040', 'region': 'Nordic Baltic Network', 'target': 10000000, 'sector_team': 'Defence & Security', 'hvc_group': 'Defence', 'country': 'FO'}, {'hvc_code': 'E041', 'region': 'Africa', 'target': 50000000, 'sector_team': 'Infrastructure', 'hvc_group': 'Infrastructure', 'country': 'EG'}, {'hvc_code': 'E042', 'region': 'Africa', 'target': 50000000, 'sector_team': 'Energy', 'hvc_group': 'Energy - Oil & Gas', 'country': 'EH'}, {'hvc_code': 'E043', 'region': 'Africa', 'target': 50000000, 'sector_team': 'Energy', 'hvc_group': 'Energy - Renewables', 'country': 'LY'}, {'hvc_code': 'E044', 'region': 'Nordic Baltic Network', 'target': 50000000, 'sector_team': 'Defence & Security', 'hvc_group': 'Defence', 'country': 'AX'}, {'hvc_code': 'E045', 'region': 'Western Europe', 'target': 10000000, 'sector_team': 'Aerospace', 'hvc_group': 'Aerospace', 'country': 'FR'}, {'hvc_code': 'E046', 'region': 'Western Europe', 'target': 50000000, 'sector_team': 'Defence & Security', 'hvc_group': 'Defence', 'country': 'MQ'}, {'hvc_code': 'E047', 'region': 'Western Europe', 'target': 50000000, 'sector_team': 'Energy', 'hvc_group': 'Energy - Nuclear', 'country': 'PF'}, {'hvc_code': 'E049', 'region': 'Western Europe', 'target': 30000000, 'sector_team': 'Automotive', 'hvc_group': 'Automotive', 'country': 'GP'}, {'hvc_code': 'E050', 'region': 'Western Europe', 'target': 10000000, 'sector_team': 'Bio-economy', 'hvc_group': 'Bio-economy - Chemicals', 'country': 'CH'}, {'hvc_code': 'E051', 'region': 'Western Europe', 'target': 40000000, 'sector_team': 'Creative, Consumer and Sports', 'hvc_group': 'Consumer and Retail', 'country': 'CW'}, {'hvc_code': 'E052', 'region': 'Western Europe', 'target': 20000000, 'sector_team': 'Defence & Security', 'hvc_group': 'Defence', 'country': 'CH'}, {'hvc_code': 'E053', 'region': 'Western Europe', 'target': 50000000, 'sector_team': 'Energy', 'hvc_group': 'Energy - Nuclear', 'country': 'YT'}, {'hvc_code': 'E054', 'region': 'Western Europe', 'target': 40000000, 'sector_team': 'Food & Drink', 'hvc_group': 'Food & Drink', 'country': 'BE'}, {'hvc_code': 'E056', 'region': 'Africa', 'target': 40000000, 'sector_team': 'Infrastructure', 'hvc_group': 'Infrastructure - Mining', 'country': 'EG'}, {'hvc_code': 'E058', 'region': 'China', 'target': 50000000, 'sector_team': 'Creative, Consumer and Sports', 'hvc_group': 'Creative', 'country': 'HK'}, {'hvc_code': 'E059', 'region': 'China', 'target': 40000000, 'sector_team': 'Education', 'hvc_group': 'Education', 'country': 'HK'}, {'hvc_code': 'E061', 'region': 'China', 'target': 20000000, 'sector_team': 'Infrastructure', 'hvc_group': 'Infrastructure', 'country': 'HK'}, {'hvc_code': 'E063', 'region': 'South Asia', 'target': 10000000, 'sector_team': 'Automotive', 'hvc_group': 'Automotive', 'country': 'MV'}, {'hvc_code': 'E064', 'region': 'South Asia', 'target': 30000000, 'sector_team': 'Bio-economy', 'hvc_group': 'Bio-economy - Agritech', 'country': 'MV'}, {'hvc_code': 'E065', 'region': 'South Asia', 'target': 50000000, 'sector_team': 'Bio-economy', 'hvc_group': 'Bio-economy - Chemicals', 'country': 'BD'}, {'hvc_code': 'E066', 'region': 'South Asia', 'target': 50000000, 'sector_team': 'Creative, Consumer and Sports', 'hvc_group': 'Consumer and Retail', 'country': 'BT'}, {'hvc_code': 'E067', 'region': 'South Asia', 'target': 40000000, 'sector_team': 'Creative, Consumer and Sports', 'hvc_group': 'Creative', 'country': 'MV'}, {'hvc_code': 'E068', 'region': 'South Asia', 'target': 30000000, 'sector_team': 'Defence & Security', 'hvc_group': 'Defence', 'country': 'IN'}, {'hvc_code': 'E069', 'region': 'South Asia', 'target': 10000000, 'sector_team': 'Technology', 'hvc_group': 'Technology', 'country': 'BD'}, {'hvc_code': 'E070', 'region': 'South Asia', 'target': 20000000, 'sector_team': 'Energy', 'hvc_group': 'Energy - Oil & Gas', 'country': 'BT'}, {'hvc_code': 'E071', 'region': 'South Asia', 'target': 40000000, 'sector_team': 'Energy', 'hvc_group': 'Energy - Renewables', 'country': 'LK'}, {'hvc_code': 'E072', 'region': 'South Asia', 'target': 30000000, 'sector_team': 'Financial & Professional Services', 'hvc_group': 'Financial & Professional Services', 'country': 'LK'}, {'hvc_code': 'E073', 'region': 'South Asia', 'target': 40000000, 'sector_team': 'Food & Drink', 'hvc_group': 'Food & Drink', 'country': 'IN'}, {'hvc_code': 'E074', 'region': 'South Asia', 'target': 50000000, 'sector_team': 'Healthcare', 'hvc_group': 'Healthcare', 'country': 'LK'}, {'hvc_code': 'E075', 'region': 'South Asia', 'target': 30000000, 'sector_team': 'Infrastructure', 'hvc_group': 'Infrastructure', 'country': 'BD'}, {'hvc_code': 'E076', 'region': 'South Asia', 'target': 40000000, 'sector_team': 'Life Sciences', 'hvc_group': 'Life Sciences', 'country': 'BD'}, {'hvc_code': 'E078', 'region': 'South East Asia', 'target': 50000000, 'sector_team': 'Aerospace', 'hvc_group': 'Aerospace', 'country': 'PH'}, {'hvc_code': 'E079', 'region': 'South East Asia', 'target': 50000000, 'sector_team': 'Defence & Security', 'hvc_group': 'Defence', 'country': 'SG'}, {'hvc_code': 'E081', 'region': 'Middle East', 'target': 10000000, 'sector_team': 'Energy', 'hvc_group': 'Energy - Oil & Gas', 'country': 'LB'}, {'hvc_code': 'E083', 'region': 'Mediterranean', 'target': 50000000, 'sector_team': 'Creative, Consumer and Sports', 'hvc_group': 'Consumer and Retail', 'country': 'IL'}, {'hvc_code': 'E085', 'region': 'North East Asia', 'target': 40000000, 'sector_team': 'Defence & Security', 'hvc_group': 'Defence', 'country': 'KR'}, {'hvc_code': 'E086', 'region': 'North East Asia', 'target': 30000000, 'sector_team': 'Technology', 'hvc_group': 'Technology', 'country': 'KP'}, {'hvc_code': 'E087', 'region': 'North East Asia', 'target': 50000000, 'sector_team': 'Energy', 'hvc_group': 'Energy - Nuclear', 'country': 'TW'}, {'hvc_code': 'E089', 'region': 'North East Asia', 'target': 40000000, 'sector_team': 'Life Sciences', 'hvc_group': 'Life Sciences', 'country': 'KR'}, {'hvc_code': 'E091', 'region': 'Turkey and Caucasus', 'target': 40000000, 'sector_team': 'Energy', 'hvc_group': 'Energy - Oil & Gas', 'country': 'AM'}, {'hvc_code': 'E092', 'region': 'Middle East', 'target': 50000000, 'sector_team': 'Defence & Security', 'hvc_group': 'Defence', 'country': 'IR'}, {'hvc_code': 'E094', 'region': 'Latin America', 'target': 20000000, 'sector_team': 'Education', 'hvc_group': 'Education', 'country': 'BO'}, {'hvc_code': 'E095', 'region': 'Latin America', 'target': 30000000, 'sector_team': 'Financial & Professional Services', 'hvc_group': 'Financial & Professional Services', 'country': 'BO'}, {'hvc_code': 'E096', 'region': 'Latin America', 'target': 30000000, 'sector_team': 'Food & Drink', 'hvc_group': 'Food & Drink', 'country': 'EC'}, {'hvc_code': 'E097', 'region': 'Latin America', 'target': 20000000, 'sector_team': 'Healthcare', 'hvc_group': 'Healthcare', 'country': 'PY'}, {'hvc_code': 'E098', 'region': 'Latin America', 'target': 20000000, 'sector_team': 'Infrastructure', 'hvc_group': 'Infrastructure - Mining', 'country': 'NI'}, {'hvc_code': 'E099', 'region': 'Latin America', 'target': 50000000, 'sector_team': 'Energy', 'hvc_group': 'Energy - Oil & Gas', 'country': 'CR'}, {'hvc_code': 'E100', 'region': 'Latin America', 'target': 50000000, 'sector_team': 'Infrastructure', 'hvc_group': 'Infrastructure - Rail', 'country': 'NI'}, {'hvc_code': 'E103', 'region': 'South East Asia', 'target': 40000000, 'sector_team': 'Defence & Security', 'hvc_group': 'Defence', 'country': 'TL'}, {'hvc_code': 'E104', 'region': 'South East Asia', 'target': 10000000, 'sector_team': 'Technology', 'hvc_group': 'Technology', 'country': 'KH'}, {'hvc_code': 'E105', 'region': 'Mediterranean', 'target': 40000000, 'sector_team': 'Defence & Security', 'hvc_group': 'Defence', 'country': 'CY'}, {'hvc_code': 'E106', 'region': 'Mediterranean', 'target': 20000000, 'sector_team': 'Life Sciences', 'hvc_group': 'Life Sciences', 'country': 'PT'}, {'hvc_code': 'E107', 'region': 'Latin America', 'target': 40000000, 'sector_team': 'Automotive', 'hvc_group': 'Automotive', 'country': 'NI'}, {'hvc_code': 'E108', 'region': 'Latin America', 'target': 40000000, 'sector_team': 'Defence & Security', 'hvc_group': 'Defence', 'country': 'VE'}, {'hvc_code': 'E110', 'region': 'Latin America', 'target': 20000000, 'sector_team': 'Infrastructure', 'hvc_group': 'Infrastructure - Airports', 'country': 'DO'}, {'hvc_code': 'E111', 'region': 'Middle East', 'target': 10000000, 'sector_team': 'Education', 'hvc_group': 'Education', 'country': 'LB'}, {'hvc_code': 'E112', 'region': 'Middle East', 'target': 20000000, 'sector_team': 'Energy', 'hvc_group': 'Energy - Nuclear', 'country': 'SA'}, {'hvc_code': 'E116', 'region': 'Nordic Baltic Network', 'target': 50000000, 'sector_team': 'Infrastructure', 'hvc_group': 'Infrastructure', 'country': 'LT'}, {'hvc_code': 'E117', 'region': 'Africa', 'target': 20000000, 'sector_team': 'Energy', 'hvc_group': 'Energy - Oil & Gas', 'country': 'LY'}, {'hvc_code': 'E118', 'region': 'North America', 'target': 20000000, 'sector_team': 'Food & Drink', 'hvc_group': 'Food & Drink', 'country': 'BB'}, {'hvc_code': 'E119', 'region': 'Western Europe', 'target': 20000000, 'sector_team': 'Energy', 'hvc_group': 'Energy - Renewables', 'country': 'LI'}, {'hvc_code': 'E120', 'region': 'Nordic Baltic Network', 'target': 30000000, 'sector_team': 'Defence & Security', 'hvc_group': 'Defence', 'country': 'FO'}, {'hvc_code': 'E121', 'region': 'Nordic Baltic Network', 'target': 30000000, 'sector_team': 'Energy', 'hvc_group': 'Energy - Oil & Gas', 'country': 'BV'}, {'hvc_code': 'E122', 'region': 'Middle East', 'target': 40000000, 'sector_team': 'Defence & Security', 'hvc_group': 'Defence', 'country': 'OM'}, {'hvc_code': 'E123', 'region': 'Middle East', 'target': 40000000, 'sector_team': 'Energy', 'hvc_group': 'Energy - Oil & Gas', 'country': 'IR'}, {'hvc_code': 'E124', 'region': 'South East Asia', 'target': 30000000, 'sector_team': 'Infrastructure', 'hvc_group': 'Infrastructure - Aid Funded Business', 'country': 'MM'}, {'hvc_code': 'E125', 'region': 'South East Asia', 'target': 40000000, 'sector_team': 'Technology', 'hvc_group': 'Technology', 'country': 'MM'}, {'hvc_code': 'E128', 'region': 'Mediterranean', 'target': 50000000, 'sector_team': 'Financial & Professional Services', 'hvc_group': 'Financial & Professional Services', 'country': 'PT'}, {'hvc_code': 'E129', 'region': 'Middle East', 'target': 10000000, 'sector_team': 'Defence & Security', 'hvc_group': 'Defence', 'country': 'AF'}, {'hvc_code': 'E132', 'region': 'Middle East', 'target': 50000000, 'sector_team': 'Creative, Consumer and Sports', 'hvc_group': 'Consumer and Retail', 'country': 'IQ'}, {'hvc_code': 'E133', 'region': 'Middle East', 'target': 10000000, 'sector_team': 'Defence & Security', 'hvc_group': 'Defence', 'country': 'KW'}, {'hvc_code': 'E135', 'region': 'Middle East', 'target': 30000000, 'sector_team': 'Energy', 'hvc_group': 'Energy - Oil & Gas', 'country': 'SY'}, {'hvc_code': 'E137', 'region': 'Middle East', 'target': 30000000, 'sector_team': 'Infrastructure', 'hvc_group': 'Infrastructure - Rail', 'country': 'AE'}, {'hvc_code': 'E138', 'region': 'Middle East', 'target': 40000000, 'sector_team': 'Infrastructure', 'hvc_group': 'Infrastructure - Water', 'country': 'SY'}, {'hvc_code': 'E140', 'region': 'South East Asia', 'target': 20000000, 'sector_team': 'Defence & Security', 'hvc_group': 'Defence', 'country': 'TL'}, {'hvc_code': 'E141', 'region': 'South East Asia', 'target': 40000000, 'sector_team': 'Technology', 'hvc_group': 'Technology', 'country': 'MY'}, {'hvc_code': 'E143', 'region': 'South East Asia', 'target': 40000000, 'sector_team': 'Infrastructure', 'hvc_group': 'Infrastructure - Water', 'country': 'TH'}, {'hvc_code': 'E145', 'region': 'Africa', 'target': 50000000, 'sector_team': 'Defence & Security', 'hvc_group': 'Defence', 'country': 'EH'}, {'hvc_code': 'E146', 'region': 'South East Asia', 'target': 50000000, 'sector_team': 'Education', 'hvc_group': 'Education', 'country': 'TL'}, {'hvc_code': 'E147', 'region': 'South East Asia', 'target': 50000000, 'sector_team': 'Infrastructure', 'hvc_group': 'Infrastructure', 'country': 'TH'}, {'hvc_code': 'E148', 'region': 'North East Asia', 'target': 20000000, 'sector_team': 'Advanced Manufacturing', 'hvc_group': 'Advanced Manufacturing', 'country': 'TW'}, {'hvc_code': 'E149', 'region': 'North East Asia', 'target': 50000000, 'sector_team': 'Creative, Consumer and Sports', 'hvc_group': 'Consumer and Retail', 'country': 'KR'}, {'hvc_code': 'E150', 'region': 'North East Asia', 'target': 20000000, 'sector_team': 'Defence & Security', 'hvc_group': 'Defence', 'country': 'TW'}, {'hvc_code': 'E151', 'region': 'North East Asia', 'target': 30000000, 'sector_team': 'Technology', 'hvc_group': 'Technology', 'country': 'JP'}, {'hvc_code': 'E152', 'region': 'North East Asia', 'target': 50000000, 'sector_team': 'Life Sciences', 'hvc_group': 'Life Sciences', 'country': 'JP'}, {'hvc_code': 'E153', 'region': 'Africa', 'target': 20000000, 'sector_team': 'Bio-economy', 'hvc_group': 'Bio-economy - Agritech', 'country': 'LY'}, {'hvc_code': 'E154', 'region': 'Africa', 'target': 10000000, 'sector_team': 'Infrastructure', 'hvc_group': 'Infrastructure - Rail', 'country': 'EG'}, {'hvc_code': 'E155', 'region': 'Mediterranean', 'target': 10000000, 'sector_team': 'Bio-economy', 'hvc_group': 'Bio-economy - Chemicals', 'country': 'MT'}, {'hvc_code': 'E156', 'region': 'Mediterranean', 'target': 30000000, 'sector_team': 'Creative, Consumer and Sports', 'hvc_group': 'Consumer and Retail', 'country': 'VA'}, {'hvc_code': 'E158', 'region': 'Nordic Baltic Network', 'target': 50000000, 'sector_team': 'Creative, Consumer and Sports', 'hvc_group': 'Consumer and Retail', 'country': 'BV'}, {'hvc_code': 'E159', 'region': 'Nordic Baltic Network', 'target': 20000000, 'sector_team': 'Defence & Security', 'hvc_group': 'Defence', 'country': 'FO'}, {'hvc_code': 'E161', 'region': 'Western Europe', 'target': 10000000, 'sector_team': 'Infrastructure', 'hvc_group': 'Infrastructure - Aid Funded Business', 'country': 'BL'}, {'hvc_code': 'E163', 'region': 'South East Asia', 'target': 10000000, 'sector_team': 'Defence & Security', 'hvc_group': 'Defence', 'country': 'PH'}, {'hvc_code': 'E164', 'region': 'South East Asia', 'target': 20000000, 'sector_team': 'Technology', 'hvc_group': 'Technology', 'country': 'ID'}, {'hvc_code': 'E165', 'region': 'Turkey and Caucasus', 'target': 40000000, 'sector_team': 'Defence & Security', 'hvc_group': 'Defence', 'country': 'GE'}, {'hvc_code': 'E166', 'region': 'Turkey and Caucasus', 'target': 50000000, 'sector_team': 'Energy', 'hvc_group': 'Energy - Nuclear', 'country': 'GE'}, {'hvc_code': 'E167', 'region': 'Turkey and Caucasus', 'target': 40000000, 'sector_team': 'Financial & Professional Services', 'hvc_group': 'Financial & Professional Services', 'country': 'GE'}, {'hvc_code': 'E168', 'region': 'Turkey and Caucasus', 'target': 20000000, 'sector_team': 'Healthcare', 'hvc_group': 'Healthcare', 'country': 'UZ'}, {'hvc_code': 'E170', 'region': 'Turkey and Caucasus', 'target': 20000000, 'sector_team': 'Aerospace', 'hvc_group': 'Aerospace', 'country': 'UA'}, {'hvc_code': 'E171', 'region': 'Turkey and Caucasus', 'target': 50000000, 'sector_team': 'Bio-economy', 'hvc_group': 'Bio-economy - Agritech', 'country': 'BY'}, {'hvc_code': 'E174', 'region': 'Middle East', 'target': 30000000, 'sector_team': 'Creative, Consumer and Sports', 'hvc_group': 'Creative', 'country': 'YE'}, {'hvc_code': 'E175', 'region': 'Middle East', 'target': 40000000, 'sector_team': 'Defence & Security', 'hvc_group': 'Defence', 'country': 'KW'}, {'hvc_code': 'E179', 'region': 'Middle East', 'target': 30000000, 'sector_team': 'Infrastructure', 'hvc_group': 'Infrastructure', 'country': 'LB'}, {'hvc_code': 'E182', 'region': 'North America', 'target': 10000000, 'sector_team': 'Aerospace', 'hvc_group': 'Aerospace', 'country': 'MP'}, {'hvc_code': 'E183', 'region': 'North America', 'target': 20000000, 'sector_team': 'Infrastructure', 'hvc_group': 'Infrastructure - Aid Funded Business', 'country': 'DM'}, {'hvc_code': 'E184', 'region': 'North America', 'target': 40000000, 'sector_team': 'Automotive', 'hvc_group': 'Automotive', 'country': 'GY'}, {'hvc_code': 'E185', 'region': 'North America', 'target': 30000000, 'sector_team': 'Bio-economy', 'hvc_group': 'Bio-economy - Chemicals', 'country': 'TC'}, {'hvc_code': 'E186', 'region': 'North America', 'target': 10000000, 'sector_team': 'Creative, Consumer and Sports', 'hvc_group': 'Consumer and Retail', 'country': 'BB'}, {'hvc_code': 'E187', 'region': 'North America', 'target': 30000000, 'sector_team': 'Creative, Consumer and Sports', 'hvc_group': 'Creative', 'country': 'VG'}, {'hvc_code': 'E188', 'region': 'North America', 'target': 30000000, 'sector_team': 'Defence & Security', 'hvc_group': 'Defence', 'country': 'VC'}, {'hvc_code': 'E189', 'region': 'North America', 'target': 20000000, 'sector_team': 'Technology', 'hvc_group': 'Technology', 'country': 'JM'}, {'hvc_code': 'E191', 'region': 'North America', 'target': 50000000, 'sector_team': 'Financial & Professional Services', 'hvc_group': 'Financial & Professional Services', 'country': 'GD'}, {'hvc_code': 'E192', 'region': 'North America', 'target': 20000000, 'sector_team': 'Infrastructure', 'hvc_group': 'Infrastructure', 'country': 'BZ'}, {'hvc_code': 'E194', 'region': 'North America', 'target': 10000000, 'sector_team': 'Life Sciences', 'hvc_group': 'Life Sciences', 'country': 'BB'}, {'hvc_code': 'E209', 'region': 'North Africa', 'target': 40000000, 'sector_team': 'Defence & Security', 'hvc_group': 'Defence', 'country': 'MR'}, {'hvc_code': 'E210', 'region': 'Turkey and Caucasus', 'target': 30000000, 'sector_team': 'Infrastructure', 'hvc_group': 'Infrastructure - Mining', 'country': 'BY'}, {'hvc_code': 'E211', 'region': 'Turkey and Caucasus', 'target': 50000000, 'sector_team': 'Infrastructure', 'hvc_group': 'Infrastructure - Mining', 'country': 'GE'}, {'hvc_code': 'E212', 'region': 'North East Asia', 'target': 10000000, 'sector_team': 'Energy', 'hvc_group': 'Energy - Renewables', 'country': 'MN'}, {'hvc_code': 'E217', 'region': 'North Africa', 'target': 30000000, 'sector_team': 'Infrastructure', 'hvc_group': 'Infrastructure - Mining', 'country': 'EH'}, {'hvc_code': 'E218', 'region': 'Western Europe', 'target': 10000000, 'sector_team': 'Defence & Security', 'hvc_group': 'Defence', 'country': 'AD'}, {'hvc_code': 'E219', 'region': 'Central European Network', 'target': 10000000, 'sector_team': 'Creative, Consumer and Sports', 'hvc_group': 'Consumer and Retail', 'country': 'PL'}, {'hvc_code': 'E220', 'region': 'Central European Network', 'target': 40000000, 'sector_team': 'Healthcare', 'hvc_group': 'Healthcare', 'country': 'RO'}, {'hvc_code': 'E221', 'region': 'Central European Network', 'target': 50000000, 'sector_team': 'Infrastructure', 'hvc_group': 'Infrastructure - Mining', 'country': 'MK'}, {'hvc_code': 'E222', 'region': 'Central European Network', 'target': 10000000, 'sector_team': 'Infrastructure', 'hvc_group': 'Infrastructure - Rail', 'country': 'HU'}, {'hvc_code': 'E223', 'region': 'Latin America', 'target': 10000000, 'sector_team': 'Defence & Security', 'hvc_group': 'Defence', 'country': 'CL'}, {'hvc_code': 'E227', 'region': 'South Asia', 'target': 40000000, 'sector_team': 'Advanced Manufacturing', 'hvc_group': 'Advanced Manufacturing', 'country': 'BT'}, {'hvc_code': 'E228', 'region': 'South East Asia', 'target': 30000000, 'sector_team': 'Energy', 'hvc_group': 'Energy - Renewables', 'country': 'BN'}, {'hvc_code': 'E229', 'region': 'Middle East', 'target': 30000000, 'sector_team': 'Creative, Consumer and Sports', 'hvc_group': 'Consumer and Retail', 'country': 'IR'}, {'hvc_code': 'E230', 'region': 'Latin America', 'target': 20000000, 'sector_team': 'Life Sciences', 'hvc_group': 'Life Sciences', 'country': 'GT'}, {'hvc_code': 'E231', 'region': 'Middle East', 'target': 20000000, 'sector_team': 'Financial & Professional Services', 'hvc_group': 'Financial & Professional Services', 'country': 'AE'}, {'hvc_code': 'E232', 'region': 'Middle East', 'target': 40000000, 'sector_team': 'Healthcare', 'hvc_group': 'Healthcare', 'country': 'YE'}, {'hvc_code': 'E233', 'region': 'Nordic Baltic Network', 'target': 40000000, 'sector_team': 'Food & Drink', 'hvc_group': 'Food & Drink', 'country': 'SE'}, {'hvc_code': 'E236', 'region': 'South East Asia', 'target': 10000000, 'sector_team': 'Financial & Professional Services', 'hvc_group': 'Financial & Professional Services', 'country': 'ID'}, {'hvc_code': 'E237', 'region': 'Mediterranean', 'target': 10000000, 'sector_team': 'Bio-economy', 'hvc_group': 'Bio-economy - Agritech', 'country': 'MC'}, {'hvc_code': 'E238', 'region': 'Western Europe', 'target': 10000000, 'sector_team': 'Defence & Security', 'hvc_group': 'Defence', 'country': 'BE'}, {'hvc_code': 'E239', 'region': 'Western Europe', 'target': 50000000, 'sector_team': 'Financial & Professional Services', 'hvc_group': 'Financial & Professional Services', 'country': 'CW'}, {'hvc_code': 'E241', 'region': 'Latin America', 'target': 50000000, 'sector_team': 'Bio-economy', 'hvc_group': 'Bio-economy - Agritech', 'country': 'CL'}]
    for target in targets:
        hvc_code = target["hvc_code"]
        financial_year = FinancialYear.objects.get(id=2017)
        if not Target.objects.filter(campaign_id=hvc_code, financial_year=financial_year).exists():
            sector_team_name = target["sector_team"]
            if not SectorTeam.objects.filter(name=sector_team_name).exists():
                SectorTeam(name=sector_team_name).save()
            sector_team = SectorTeam.objects.get(name=sector_team_name)
            hvc_group_name = target["hvc_group"]
            if not HVCGroup.objects.filter(name=hvc_group_name, sector_team=sector_team).exists():
                # The way HVCGroups were fed in originally meant, Django's auto incirmental ID is screwed up.
                # We either have to setval('mi_hvcgroup_id_seq', (SELECT MAX(id) FROM mi_hvcgroup))
                # before adding any new or provide an id with each new record
                new_hvcgroup_id = int(HVCGroup.objects.latest("id").id) + 1
                HVCGroup(id=new_hvcgroup_id, name=hvc_group_name, sector_team=sector_team).save()
            hvc_group = HVCGroup.objects.get(name=hvc_group_name, sector_team=sector_team)
            taget_val = target["target"]
            Target(campaign_id=hvc_code, target=taget_val, hvc_group=hvc_group,
                   sector_team=sector_team, country=None, financial_year=financial_year).save()


def add_sectors_to_new_sector_teams__0035(apps, schema_editor):
    """
    Creative, Consumer and Sports is the only new SectorTeam and need to add Sectors
    """
    ccs_sectors = [72, 73, 74, 75, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110,
     111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 183, 184, 185, 205, 207, 208, 209, 210, 211, 242, 256]
    SectorTeam = apps.get_model('mi', 'SectorTeam')
    Sector = apps.get_model('mi', 'Sector')
    sector_team = SectorTeam.objects.get(name="Creative, Consumer and Sports")
    for sector_id in ccs_sectors:
        sector = Sector.objects.get(id=sector_id)
        sector.sector_team.add(sector_team)


def forwards__0037(apps, schema_editor):
    OverseasRegion = apps.get_model('mi', 'OverseasRegion')
    OverseasRegionYear = apps.get_model('mi', 'OverseasRegionYear')
    Country = apps.get_model('mi', 'Country')
    FinancialYear = apps.get_model('mi', 'FinancialYear')

    fy2016 = FinancialYear.objects.get(id='2016')
    fy2017 = FinancialYear.objects.get(id='2017')
    to_create = []

    # bake in 2016/17 data

    data2016_17 = {
        'Australia-New Zealand': [
            {'country': 'AU'}, {'country': 'SB'}, {'country': 'NF'}, {'country': 'CC'},
            {'country': 'VU'}, {'country': 'WS'}, {'country': 'TO'}, {'country': 'FM'},
            {'country': 'CK'}, {'country': 'NR'}, {'country': 'CX'}, {'country': 'FJ'},
            {'country': 'NU'}, {'country': 'TK'}, {'country': 'NZ'}, {'country': 'PG'},
            {'country': 'PW'}, {'country': 'PN'}, {'country': 'MH'}, {'country': 'KI'},
            {'country': 'HM'}, {'country': 'TV'}
        ],
        'Central European Network': [
            {'country': 'HR'}, {'country': 'BA'}, {'country': 'AT'}, {'country': 'ME'}, {'country': 'AL'},
            {'country': 'HU'}, {'country': 'RS'}, {'country': 'SI'}, {'country': 'SK'}, {'country': 'RO'},
            {'country': 'CZ'}, {'country': 'MD'}, {'country': 'MK'}, {'country': 'BG'}, {'country': 'PL'}
        ],
        'China': [
            {'country': 'CN'}, {'country': 'MO'}, {'country': 'HK'}
        ],
        'East Africa': [
            {'country': 'SO'}, {'country': 'SS'}, {'country': 'KE'}, {'country': 'ET'}, {'country': 'DJ'},
            {'country': 'RW'}, {'country': 'UG'}, {'country': 'ER'}, {'country': 'TZ'}, {'country': 'BI'}
        ],
        'Latin America': [
            {'country': 'HT'}, {'country': 'VE'}, {'country': 'GT'}, {'country': 'PA'}, {'country': 'MX'},
            {'country': 'AR'}, {'country': 'DO'}, {'country': 'PY'}, {'country': 'CU'}, {'country': 'NI'},
            {'country': 'UY'}, {'country': 'CL'}, {'country': 'HN'}, {'country': 'SR'}, {'country': 'EC'},
            {'country': 'BR'}, {'country': 'SV'}, {'country': 'BO'}, {'country': 'CO'}, {'country': 'PE'},
            {'country': 'CR'}
        ],
        'Mediterranean': [
            {'country': 'VA'}, {'country': 'MT'}, {'country': 'ES'}, {'country': 'PT'}, {'country': 'GI'},
            {'country': 'SM'}, {'country': 'IL'}, {'country': 'IT'}, {'country': 'CY'}, {'country': 'MC'},
            {'country': 'GR'}
        ],
        'Middle East': [
            {'country': 'OM'}, {'country': 'AE'}, {'country': 'JO'}, {'country': 'YE'}, {'country': 'SA'},
            {'country': 'BH'}, {'country': 'LB'}, {'country': 'PK'}, {'country': 'PS'}, {'country': 'IQ'},
            {'country': 'SY'}, {'country': 'AF'}, {'country': 'IR'}, {'country': 'KW'}, {'country': 'QA'}
        ],
        'Nordic Baltic Network': [
            {'country': 'LT'}, {'country': 'NO'}, {'country': 'FI'}, {'country': 'BV'}, {'country': 'GL'},
            {'country': 'SJ'}, {'country': 'EE'}, {'country': 'DK'}, {'country': 'IS'}, {'country': 'SE'},
            {'country': 'AX'}, {'country': 'LV'}, {'country': 'FO'}
        ],
        'North Africa': [
            {'country': 'TN'}, {'country': 'DZ'}, {'country': 'LY'}, {'country': 'SD'}, {'country': 'EH'},
            {'country': 'EG'}, {'country': 'MA'}, {'country': 'MR'}
        ],
        'North America': [
            {'country': 'TT'}, {'country': 'BS'}, {'country': 'VC'}, {'country': 'BZ'}, {'country': 'LC'},
            {'country': 'VG'}, {'country': 'FK'}, {'country': 'AS'}, {'country': 'VI'}, {'country': 'BM'},
            {'country': 'TC'}, {'country': 'PR'}, {'country': 'AG'}, {'country': 'MS'}, {'country': 'UM'},
            {'country': 'US'}, {'country': 'KY'}, {'country': 'KN'}, {'country': 'BB'}, {'country': 'GY'},
            {'country': 'DM'}, {'country': 'AI'}, {'country': 'GD'}, {'country': 'SH'}, {'country': 'CA'},
            {'country': 'JM'}, {'country': 'GS'}, {'country': 'AQ'}, {'country': 'MP'}, {'country': 'GU'}
        ],
        'North East Asia': [
            {'country': 'MN'}, {'country': 'KR'}, {'country': 'TW'}, {'country': 'JP'}, {'country': 'KP'}
        ],
        'South Asia': [
            {'country': 'BD'}, {'country': 'IN'}, {'country': 'BT'}, {'country': 'LK'}, {'country': 'NP'}, {'country': 'MV'}
        ],
        'South East Asia': [
            {'country': 'MY'}, {'country': 'PH'}, {'country': 'LA'}, {'country': 'TL'}, {'country': 'TH'},
            {'country': 'VN'}, {'country': 'IO'}, {'country': 'BN'}, {'country': 'ID'}, {'country': 'SG'},
            {'country': 'KH'}, {'country': 'MM'}
        ],
        'Southern Africa': [
            {'country': 'MW'}, {'country': 'SZ'}, {'country': 'BW'}, {'country': 'MZ'}, {'country': 'ZA'},
            {'country': 'ZW'}, {'country': 'MU'}, {'country': 'AO'}, {'country': 'LS'}, {'country': 'KM'},
            {'country': 'ZM'}, {'country': 'MG'}, {'country': 'NA'}, {'country': 'SC'}
        ],
        'Turkey and Caucasus': [
            {'country': 'KZ'}, {'country': 'UA'}, {'country': 'AZ'}, {'country': 'UZ'}, {'country': 'GE'},
            {'country': 'TM'}, {'country': 'BY'}, {'country': 'TR'}, {'country': 'KG'}, {'country': 'AM'},
            {'country': 'TJ'}, {'country': 'RU'}
        ],
        'West Africa': [
            {'country': 'SL'}, {'country': 'LR'}, {'country': 'CF'}, {'country': 'BF'}, {'country': 'GM'},
            {'country': 'ST'}, {'country': 'CI'}, {'country': 'CM'}, {'country': 'CV'}, {'country': 'GH'},
            {'country': 'SN'}, {'country': 'GA'}, {'country': 'GN'}, {'country': 'BJ'}, {'country': 'NE'},
            {'country': 'GQ'}, {'country': 'ML'}, {'country': 'TG'}, {'country': 'CD'}, {'country': 'NG'},
            {'country': 'CG'}, {'country': 'TD'}, {'country': 'GW'}
        ],
        'Western Europe': [
            {'country': 'PM'}, {'country': 'PF'}, {'country': 'DE'}, {'country': 'LI'}, {'country': 'MQ'},
            {'country': 'GP'}, {'country': 'YT'}, {'country': 'GF'}, {'country': 'AD'}, {'country': 'CW'},
            {'country': 'AW'}, {'country': 'MF'}, {'country': 'TF'}, {'country': 'RE'}, {'country': 'WF'},
            {'country': 'FR'}, {'country': 'SX'}, {'country': 'LU'}, {'country': 'NC'}, {'country': 'BQ'},
            {'country': 'CH'}, {'country': 'BL'}, {'country': 'IE'}, {'country': 'BE'}, {'country': 'NL'}
        ]
    }

    data2017_18 = {
        'Africa': [
            'AO', 'BJ', 'BW', 'BF', 'BI', 'CV', 'CM', 'CF', 'TD', 'KM', 'CG', 'CD', 'CI', 'DJ', 'GQ', 'ER', 'ET', 'GA',
            'GM', 'GH', 'GN', 'GW', 'KE', 'LS', 'LR', 'MG', 'MW', 'ML', 'MU', 'MZ', 'NA', 'NE', 'NG', 'RW', 'ST', 'SN',
            'SC', 'SL', 'SO', 'ZA', 'SS', 'SZ', 'TZ', 'TG', 'UG', 'ZM', 'ZW'
        ],
        'Australia-New Zealand': [
            'AU', 'CX', 'CC', 'CK', 'FJ', 'HM', 'KI', 'MH', 'FM', 'NR', 'NZ', 'NU', 'NF', 'PW', 'PG', 'PN', 'WS', 'SB',
            'TK', 'TO', 'TV', 'VU'
        ],
        'Central European Network': [
            'AL', 'BA', 'BG', 'HR', 'CZ', 'HU', 'XK', 'MK', 'MD', 'ME', 'PL', 'RO', 'RS', 'SK', 'SI'
        ],
        'China': ['CN', 'HK', 'MO'],
        'Latin America': [
            'AI', 'AG', 'AR', 'BS', 'BB', 'BZ', 'BM', 'BO', 'BR', 'KY', 'CL', 'CO', 'CR', 'CU', 'DM', 'DO', 'EC', 'SV',
            'FK', 'GD', 'GT', 'GY', 'HT', 'HN', 'JM', 'MX', 'MS', 'NI', 'PA', 'PY', 'PE', 'SH', 'KN', 'LC', 'VC', 'GS',
            'SR', 'TT', 'TC', 'UY', 'VE', 'VG'
        ],
        'Mediterranean': ['AD', 'CY', 'GI', 'GR', 'VA', 'IL', 'IT', 'MT', 'PT', 'SM', 'ES'],
        'Middle East': ['AF', 'BH', 'IR', 'IQ', 'JO', 'KW', 'LB', 'OM', 'PK', 'PS', 'QA', 'SA', 'SY', 'AE', 'YE'],
        'Nordic Baltic Network': ['AX', 'BV', 'DK', 'EE', 'FO', 'FI', 'GL', 'IS', 'LV', 'LT', 'NO', 'SJ', 'SE'],
        'North Africa': ['DZ', 'EG', 'LY', 'MR', 'MA', 'SD', 'TN', 'EH'],
        'North America': ['AS', 'CA', 'GU', 'MP', 'PR', 'UM', 'US', 'VI'],
        'North East Asia': ['JP', 'KP', 'KR', 'TW'],
        'South Asia': ['BD', 'BT', 'IN', 'MV', 'NP', 'LK'],
        'South East Asia': ['IO', 'BN', 'KH', 'ID', 'LA', 'MY', 'MM', 'PH', 'SG', 'TH', 'TL', 'VN'],
        'Turkey and Caucasus': ['AM', 'AZ', 'BY', 'GE', 'KZ', 'KG', 'MN', 'RU', 'TJ', 'TR', 'TM', 'UA', 'UZ'],
        'Western Europe': [
            'AQ', 'AW', 'AT', 'BE', 'BQ', 'CW', 'FR', 'GF', 'PF', 'TF', 'DE', 'GP', 'GG', 'IE', 'IM', 'JE', 'LI', 'LU',
            'MQ', 'YT', 'MC', 'NL', 'NC', 'RE', 'BL', 'MF', 'PM', 'SX', 'CH', 'WF'
        ]
    }

    for region, countries in data2016_17.items():
        oregion = OverseasRegion.objects.get(name=region)
        for country in countries:
            to_create.append(
                OverseasRegionYear(
                    financial_year=fy2016,
                    country=Country.objects.get(country=country['country']),
                    overseas_region=oregion)
            )

    for region, countries in data2017_18.items():
        oregion, _ = OverseasRegion.objects.get_or_create(name=region)
        for country_code in countries:
            try:
                country = Country.objects.get(country=country_code)
            except Country.DoesNotExist:
                country = Country(country=country_code, overseas_region=oregion)
                country.save()

            to_create.append(
                OverseasRegionYear(
                    financial_year=fy2017,
                    country=country,
                    overseas_region=oregion
                )
            )
    OverseasRegionYear.objects.bulk_create(to_create)


def forwards__0040(apps, schema_editor):
    OverseasRegionGroup = apps.get_model('mi', 'OverseasRegionGroup')
    OverseasRegion = apps.get_model('mi', 'OverseasRegion')
    OverseasRegionGroupYear = apps.get_model('mi', 'OverseasRegionGroupYear')
    FinancialYear = apps.get_model('mi', 'FinancialYear')

    fy2016 = FinancialYear.objects.get(id='2016')
    fy2017 = FinancialYear.objects.get(id='2017')
    to_create = []


    # make 2016 region groups
    g2016 = {
        'Europe': [
            'Central European Network',
            'Mediterranean',
            'Nordic Baltic Network',
            'Western Europe',
        ],
        'Near East and North Africa': [
            'Middle East',
            'North Africa',
            'Turkey and Caucasus',
        ],
        'East': [
            'China',
            'North East Asia',
            'South Asia',
        ],
        'South Pacific': [
            'Australia-New Zealand',
            'South East Asia',
        ],
        'Americas': [
            'North America',
            'Latin America',
        ],
        'East, West & South Africa': [
            'East Africa',
            'Southern Africa',
            'West Africa',
        ]
    }
    for group, regions in g2016.items():
        group_instance, _ = OverseasRegionGroup.objects.get_or_create(name=group)
        for region in regions:
            region_instance = OverseasRegion.objects.get(name=region)
            to_create.append(
                OverseasRegionGroupYear(region=region_instance, financial_year=fy2016, group=group_instance)
            )

    # make 2017 region groups
    g2017 = {
        'Africa': [
            'Africa',
            'North Africa',
        ],
        'Asia-Pacific': [
            'Australia-New Zealand',
            'North East Asia',
            'South East Asia',
        ],
        'Central Asia': [
            'Turkey and Caucasus',
        ],
        'China': [
            'China'
        ],
        'Europe': [
            'Central European Network',
            'Mediterranean',
            'Nordic Baltic Network',
            'Western Europe',
        ],
        'Latin America': [
            'Latin America'
        ],
        'Middle East': [
            'Middle East'
        ],
        'North America': [
            'North America'
        ],
        'South Asia': [
            'South Asia'
        ],
    }

    for group, regions in g2017.items():
        group_instance, _ = OverseasRegionGroup.objects.get_or_create(name=group)
        for region in regions:
            region_instance = OverseasRegion.objects.get(name=region)
            to_create.append(
                OverseasRegionGroupYear(region=region_instance, financial_year=fy2017, group=group_instance)
            )

    OverseasRegionGroupYear.objects.bulk_create(to_create)



def add_2016_hvc_countries__0037(apps, schema_editor):
    Target = apps.get_model('mi', 'Target')
    FinancialYear = apps.get_model('mi', 'FinancialYear')
    Country = apps.get_model('mi', 'Country')
    hvc_2016 = [('E008', 'BH', 2016),
                ('E012', 'BR', 2016),
                ('E013', 'BR', 2016),
                ('E014', 'BR', 2016),
                ('E017', 'HU', 2016),
                ('E018', 'PL', 2016),
                ('E020', 'RO', 2016),
                ('E023', 'CN', 2016),
                ('E024', 'CN', 2016),
                ('E026', 'CN', 2016),
                ('E027', 'CN', 2016),
                ('E028', 'CN', 2016),
                ('E030', 'CN', 2016),
                ('E031', 'CN', 2016),
                ('E032', 'CN', 2016),
                ('E033', 'CN', 2016),
                ('E035', 'CN', 2016),
                ('E037', 'CN', 2016),
                ('E039', 'CN', 2016),
                ('E040', 'DK', 2016),
                ('E041', 'KE', 2016),
                ('E042', 'TZ', 2016),
                ('E044', 'FI', 2016),
                ('E045', 'FR', 2016),
                ('E047', 'FR', 2016),
                ('E050', 'DE', 2016),
                ('E051', 'DE', 2016),
                ('E053', 'DE', 2016),
                ('E054', 'DE', 2016),
                ('E056', 'GH', 2016),
                ('E058', 'HK', 2016),
                ('E060', 'HK', 2016),
                ('E061', 'HK', 2016),
                ('E063', 'IN', 2016),
                ('E064', 'IN', 2016),
                ('E065', 'IN', 2016),
                ('E067', 'IN', 2016),
                ('E068', 'IN', 2016),
                ('E070', 'IN', 2016),
                ('E071', 'IN', 2016),
                ('E072', 'IN', 2016),
                ('E073', 'IN', 2016),
                ('E074', 'IN', 2016),
                ('E075', 'IN', 2016),
                ('E076', 'IN', 2016),
                ('E077', 'IN', 2016),
                ('E078', 'ID', 2016),
                ('E079', 'ID', 2016),
                ('E081', 'IQ', 2016),
                ('E083', 'IT', 2016),
                ('E084', 'JP', 2016),
                ('E086', 'JP', 2016),
                ('E087', 'JP', 2016),
                ('E088', 'JP', 2016),
                ('E090', 'JP', 2016),
                ('E091', 'KZ', 2016),
                ('E092', 'KW', 2016),
                ('E094', 'BR', 2016),
                ('E095', 'BR', 2016),
                ('E099', 'MX', 2016),
                ('E103', 'MY', 2016),
                ('E105', 'IT', 2016),
                ('E106', 'ES', 2016),
                ('E107', 'MX', 2016),
                ('E111', 'AE', 2016),
                ('E112', 'SA', 2016),
                ('E114', 'DK', 2016),
                ('E116', 'SE', 2016),
                ('E117', 'NG', 2016),
                ('E118', 'US', 2016),
                ('E121', 'NO', 2016),
                ('E122', 'OM', 2016),
                ('E123', 'OM', 2016),
                ('E126', 'PH', 2016),
                ('E127', 'PT', 2016),
                ('E130', 'QA', 2016),
                ('E131', 'SA', 2016),
                ('E135', 'SA', 2016),
                ('E136', 'SA', 2016),
                ('E138', 'SA', 2016),
                ('E139', 'SG', 2016),
                ('E140', 'SG', 2016),
                ('E142', 'SG', 2016),
                ('E143', 'SG', 2016),
                ('E144', 'ZA', 2016),
                ('E145', 'ZA', 2016),
                ('E146', 'MY', 2016),
                ('E147', 'SG', 2016),
                ('E149', 'KR', 2016),
                ('E152', 'KR', 2016),
                ('E154', 'ZA', 2016),
                ('E155', 'ES', 2016),
                ('E156', 'ES', 2016),
                ('E158', 'SE', 2016),
                ('E160', 'SE', 2016),
                ('E163', 'TH', 2016),
                ('E166', 'TR', 2016),
                ('E168', 'TR', 2016),
                ('E171', 'UA', 2016),
                ('E173', 'AE', 2016),
                ('E174', 'AE', 2016),
                ('E175', 'AE', 2016),
                ('E176', 'AE', 2016),
                ('E178', 'AE', 2016),
                ('E179', 'AE', 2016),
                ('E180', 'AE', 2016),
                ('E181', 'AE', 2016),
                ('E182', 'US', 2016),
                ('E185', 'US', 2016),
                ('E187', 'US', 2016),
                ('E194', 'US', 2016),
                ('E209', 'TN', 2016),
                ('E211', 'KZ', 2016),
                ('E212', 'TW', 2016),
                ('E214', 'FR', 2016),
                ('E003', 'AU', 2016),
                ('E004', 'AU', 2016),
                ('E005', 'AU', 2016),
                ('E006', 'AU', 2016),
                ('E007', 'AZ', 2016),
                ('E010', 'BE', 2016),
                ('E015', 'CA', 2016),
                ('E019', 'PL', 2016),
                ('E022', 'CN', 2016),
                ('E029', 'CN', 2016),
                ('E038', 'CN', 2016),
                ('E043', 'KE', 2016),
                ('E046', 'FR', 2016),
                ('E055', 'DE', 2016),
                ('E062', 'IN', 2016),
                ('E066', 'IN', 2016),
                ('E069', 'IN', 2016),
                ('E085', 'JP', 2016),
                ('E089', 'JP', 2016),
                ('E093', 'KW', 2016),
                ('E098', 'CL', 2016),
                ('E100', 'CO', 2016),
                ('E102', 'MY', 2016),
                ('E109', 'MX', 2016),
                ('E115', 'DK', 2016),
                ('E119', 'NL', 2016),
                ('E132', 'SA', 2016),
                ('E133', 'SA', 2016),
                ('E141', 'SG', 2016),
                ('E150', 'KR', 2016),
                ('E151', 'KR', 2016),
                ('E161', 'CH', 2016),
                ('E162', 'TH', 2016),
                ('E167', 'TR', 2016),
                ('E170', 'UA', 2016),
                ('E183', 'US', 2016),
                ('E184', 'US', 2016),
                ('E188', 'US', 2016),
                ('E189', 'US', 2016),
                ('E190', 'US', 2016),
                ('E213', 'IR', 2016),
                ('E001', 'AU', 2016),
                ('E195', 'BS', 2016),
                ('E002', 'AU', 2016),
                ('E009', 'LT', 2016),
                ('E011', 'BE', 2016),
                ('E016', 'CA', 2016),
                ('E021', 'CL', 2016),
                ('E025', 'CN', 2016),
                ('E034', 'CN', 2016),
                ('E048', 'FR', 2016),
                ('E049', 'DE', 2016),
                ('E052', 'DE', 2016),
                ('E059', 'HK', 2016),
                ('E080', 'IQ', 2016),
                ('E082', 'IQ', 2016),
                ('E096', 'MX', 2016),
                ('E097', 'BR', 2016),
                ('E101', 'BR', 2016),
                ('E104', 'MY', 2016),
                ('E108', 'MX', 2016),
                ('E110', 'MX', 2016),
                ('E120', 'NO', 2016),
                ('E124', 'PH', 2016),
                ('E125', 'PH', 2016),
                ('E128', 'PT', 2016),
                ('E129', 'QA', 2016),
                ('E134', 'SA', 2016),
                ('E137', 'SA', 2016),
                ('E148', 'KR', 2016),
                ('E153', 'ZA', 2016),
                ('E157', 'SE', 2016),
                ('E159', 'SE', 2016),
                ('E164', 'TH', 2016),
                ('E165', 'TR', 2016),
                ('E169', 'TR', 2016),
                ('E172', 'AE', 2016),
                ('E177', 'AE', 2016),
                ('E186', 'US', 2016),
                ('E191', 'US', 2016),
                ('E192', 'US', 2016),
                ('E210', 'MN', 2016),
                ('E217', 'MA', 2016),
                ('E215', '', 2016)]
    financial_year = FinancialYear.objects.get(id=2016)
    for item in hvc_2016:
        hvc, country_code, fy = item
        # skip entries without country codes
        if country_code != '':
            country = Country.objects.get(country=country_code)
            if Target.objects.filter(campaign_id=hvc, financial_year=financial_year).exists():
                target = Target.objects.get(campaign_id=hvc, financial_year=financial_year)
                target.country.add(country)


def target_country_correction__0048(apps, schema_editor):
    Target = apps.get_model('mi', 'Target')
    FinancialYear = apps.get_model('mi', 'FinancialYear')
    Country = apps.get_model('mi', 'Country')
    TargetCountry = apps.get_model('mi', 'TargetCountry')
    hvc_corrections = [['E042', ['TZ']], ['E241', ['BR']]]
    financial_year = FinancialYear.objects.get(id=2017)
    for item in hvc_corrections:
        hvc = item[0]
        if Target.objects.filter(campaign_id=hvc, financial_year=financial_year).exists():
            target = Target.objects.get(campaign_id=hvc, financial_year=financial_year)
            for country_code in item[1]:
                # skip entries without country codes
                if country_code != '' and country_code != 'XG':
                    country = Country.objects.get(country=country_code)
                    TargetCountry(target=target, country=country).save()


def add_contributing_countries__0048(apps, schema_editor):
    hvc_2016 = [('E008', 'BH', 2016),
                ('E012', 'BR', 2016),
                ('E013', 'BR', 2016),
                ('E014', 'BR', 2016),
                ('E017', 'HU', 2016),
                ('E018', 'PL', 2016),
                ('E020', 'RO', 2016),
                ('E023', 'CN', 2016),
                ('E024', 'CN', 2016),
                ('E026', 'CN', 2016),
                ('E027', 'CN', 2016),
                ('E028', 'CN', 2016),
                ('E030', 'CN', 2016),
                ('E031', 'CN', 2016),
                ('E032', 'CN', 2016),
                ('E033', 'CN', 2016),
                ('E035', 'CN', 2016),
                ('E037', 'CN', 2016),
                ('E039', 'CN', 2016),
                ('E040', 'DK', 2016),
                ('E041', 'KE', 2016),
                ('E042', 'TZ', 2016),
                ('E044', 'FI', 2016),
                ('E045', 'FR', 2016),
                ('E047', 'FR', 2016),
                ('E050', 'DE', 2016),
                ('E051', 'DE', 2016),
                ('E053', 'DE', 2016),
                ('E054', 'DE', 2016),
                ('E056', 'GH', 2016),
                ('E058', 'HK', 2016),
                ('E060', 'HK', 2016),
                ('E061', 'HK', 2016),
                ('E063', 'IN', 2016),
                ('E064', 'IN', 2016),
                ('E065', 'IN', 2016),
                ('E067', 'IN', 2016),
                ('E068', 'IN', 2016),
                ('E070', 'IN', 2016),
                ('E071', 'IN', 2016),
                ('E072', 'IN', 2016),
                ('E073', 'IN', 2016),
                ('E074', 'IN', 2016),
                ('E075', 'IN', 2016),
                ('E076', 'IN', 2016),
                ('E077', 'IN', 2016),
                ('E078', 'ID', 2016),
                ('E079', 'ID', 2016),
                ('E081', 'IQ', 2016),
                ('E083', 'IT', 2016),
                ('E084', 'JP', 2016),
                ('E086', 'JP', 2016),
                ('E087', 'JP', 2016),
                ('E088', 'JP', 2016),
                ('E090', 'JP', 2016),
                ('E091', 'KZ', 2016),
                ('E092', 'KW', 2016),
                ('E094', 'BR', 2016),
                ('E095', 'BR', 2016),
                ('E099', 'MX', 2016),
                ('E103', 'MY', 2016),
                ('E105', 'IT', 2016),
                ('E106', 'ES', 2016),
                ('E107', 'MX', 2016),
                ('E111', 'AE', 2016),
                ('E112', 'SA', 2016),
                ('E114', 'DK', 2016),
                ('E116', 'SE', 2016),
                ('E117', 'NG', 2016),
                ('E118', 'US', 2016),
                ('E121', 'NO', 2016),
                ('E122', 'OM', 2016),
                ('E123', 'OM', 2016),
                ('E126', 'PH', 2016),
                ('E127', 'PT', 2016),
                ('E130', 'QA', 2016),
                ('E131', 'SA', 2016),
                ('E135', 'SA', 2016),
                ('E136', 'SA', 2016),
                ('E138', 'SA', 2016),
                ('E139', 'SG', 2016),
                ('E140', 'SG', 2016),
                ('E142', 'SG', 2016),
                ('E143', 'SG', 2016),
                ('E144', 'ZA', 2016),
                ('E145', 'ZA', 2016),
                ('E146', 'MY', 2016),
                ('E147', 'SG', 2016),
                ('E149', 'KR', 2016),
                ('E152', 'KR', 2016),
                ('E154', 'ZA', 2016),
                ('E155', 'ES', 2016),
                ('E156', 'ES', 2016),
                ('E158', 'SE', 2016),
                ('E160', 'SE', 2016),
                ('E163', 'TH', 2016),
                ('E166', 'TR', 2016),
                ('E168', 'TR', 2016),
                ('E171', 'UA', 2016),
                ('E173', 'AE', 2016),
                ('E174', 'AE', 2016),
                ('E175', 'AE', 2016),
                ('E176', 'AE', 2016),
                ('E178', 'AE', 2016),
                ('E179', 'AE', 2016),
                ('E180', 'AE', 2016),
                ('E181', 'AE', 2016),
                ('E182', 'US', 2016),
                ('E185', 'US', 2016),
                ('E187', 'US', 2016),
                ('E194', 'US', 2016),
                ('E209', 'TN', 2016),
                ('E211', 'KZ', 2016),
                ('E212', 'TW', 2016),
                ('E214', 'FR', 2016),
                ('E003', 'AU', 2016),
                ('E004', 'AU', 2016),
                ('E005', 'AU', 2016),
                ('E006', 'AU', 2016),
                ('E007', 'AZ', 2016),
                ('E010', 'BE', 2016),
                ('E015', 'CA', 2016),
                ('E019', 'PL', 2016),
                ('E022', 'CN', 2016),
                ('E029', 'CN', 2016),
                ('E038', 'CN', 2016),
                ('E043', 'KE', 2016),
                ('E046', 'FR', 2016),
                ('E055', 'DE', 2016),
                ('E062', 'IN', 2016),
                ('E066', 'IN', 2016),
                ('E069', 'IN', 2016),
                ('E085', 'JP', 2016),
                ('E089', 'JP', 2016),
                ('E093', 'KW', 2016),
                ('E098', 'CL', 2016),
                ('E100', 'CO', 2016),
                ('E102', 'MY', 2016),
                ('E109', 'MX', 2016),
                ('E115', 'DK', 2016),
                ('E119', 'NL', 2016),
                ('E132', 'SA', 2016),
                ('E133', 'SA', 2016),
                ('E141', 'SG', 2016),
                ('E150', 'KR', 2016),
                ('E151', 'KR', 2016),
                ('E161', 'CH', 2016),
                ('E162', 'TH', 2016),
                ('E167', 'TR', 2016),
                ('E170', 'UA', 2016),
                ('E183', 'US', 2016),
                ('E184', 'US', 2016),
                ('E188', 'US', 2016),
                ('E189', 'US', 2016),
                ('E190', 'US', 2016),
                ('E213', 'IR', 2016),
                ('E001', 'AU', 2016),
                ('E195', 'BS', 2016),
                ('E002', 'AU', 2016),
                ('E009', 'LT', 2016),
                ('E011', 'BE', 2016),
                ('E016', 'CA', 2016),
                ('E021', 'CL', 2016),
                ('E025', 'CN', 2016),
                ('E034', 'CN', 2016),
                ('E048', 'FR', 2016),
                ('E049', 'DE', 2016),
                ('E052', 'DE', 2016),
                ('E059', 'HK', 2016),
                ('E080', 'IQ', 2016),
                ('E082', 'IQ', 2016),
                ('E096', 'MX', 2016),
                ('E097', 'BR', 2016),
                ('E101', 'BR', 2016),
                ('E104', 'MY', 2016),
                ('E108', 'MX', 2016),
                ('E110', 'MX', 2016),
                ('E120', 'NO', 2016),
                ('E124', 'PH', 2016),
                ('E125', 'PH', 2016),
                ('E128', 'PT', 2016),
                ('E129', 'QA', 2016),
                ('E134', 'SA', 2016),
                ('E137', 'SA', 2016),
                ('E148', 'KR', 2016),
                ('E153', 'ZA', 2016),
                ('E157', 'SE', 2016),
                ('E159', 'SE', 2016),
                ('E164', 'TH', 2016),
                ('E165', 'TR', 2016),
                ('E169', 'TR', 2016),
                ('E172', 'AE', 2016),
                ('E177', 'AE', 2016),
                ('E186', 'US', 2016),
                ('E191', 'US', 2016),
                ('E192', 'US', 2016),
                ('E210', 'MN', 2016),
                ('E217', 'MA', 2016),
                ('E215', '', 2016)]
    hvc_2017 = [
        ['E002', ['AU', 'NZ']],
        ['E005', ['AU', 'NZ']],
        ['E006', ['AU']],
        ['E007', ['AZ']],
        ['E008', ['BH']],
        ['E009', ['LT', 'EE', 'LV']],
        ['E011', ['BE', 'NL', 'LU']],
        ['E012', ['BR']],
        ['E013', ['BR']],
        ['E014', ['BR']],
        ['E015', ['CA']],
        ['E016', ['CA']],
        ['E017', ['HU', 'CZ', 'PL', 'RO', 'SK', 'BG', 'RS']],
        ['E018', ['PL', 'CZ', 'RO', 'SK', 'BG']],
        ['E019', ['PL', 'BG', 'CZ', 'RO', 'RS', 'SK']],
        ['E020', ['RO', 'BG', 'CZ', 'HU', 'PL', 'SK', 'SI']],
        ['E021', ['CL']],
        ['E022', ['CN']],
        ['E023', ['CN']],
        ['E024', ['CN']],
        ['E025', ['CN']],
        ['E026', ['CN']],
        ['E027', ['CN']],
        ['E028', ['CN']],
        ['E029', ['CN']],
        ['E030', ['CN']],
        ['E031', ['CN', 'HK']],
        ['E032', ['CN']],
        ['E033', ['CN', 'HK']],
        ['E034', ['CN']],
        ['E035', ['CN']],
        ['E037', ['CN']],
        ['E038', ['CN', 'HK']],
        ['E040', ['DK']],
        ['E041', ['KE', 'ET', 'TN', 'UG']],
        ['E042', ['TZ', 'UG', 'MZ']],
        ['E043', ['KE', 'ET', 'TN', 'UG']],
        ['E044', ['FI']],
        ['E045', ['FR']],
        ['E046', ['FR']],
        ['E047', ['FR']],
        ['E049', ['DE']],
        ['E050', ['DE', 'AT', 'CH']],
        ['E051', ['DE']],
        ['E052', ['DE']],
        ['E053', ['DE', 'SE']],
        ['E054', ['DE', 'FR', 'IE', 'CH']],
        ['E055', ['DE', 'CH', 'AT']],
        ['E056', ['GH', 'GN', 'ZM', "CI", 'AO', 'TN']],
        ['E058', ['HK']],
        ['E059', ['HK']],
        ['E061', ['HK', 'TW']],
        ['E063', ['IN']],
        ['E064', ['IN']],
        ['E065', ['IN']],
        ['E066', ['IN']],
        ['E067', ['IN']],
        ['E068', ['IN']],
        ['E069', ['IN']],
        ['E070', ['IN']],
        ['E071', ['IN']],
        ['E072', ['IN']],
        ['E073', ['IN']],
        ['E074', ['IN']],
        ['E075', ['IN']],
        ['E076', ['IN']],
        ['E078', ['ID']],
        ['E079', ['ID']],
        ['E081', ['IQ']],
        ['E083', ['IT']],
        ['E085', ['JP']],
        ['E086', ['JP']],
        ['E087', ['JP']],
        ['E089', ['JP']],
        ['E091', ['KZ']],
        ['E092', ['KW']],
        ['E094', ['BR', 'CO', 'MX', 'EC', 'PA']],
        ['E095', ['BR', 'CO', 'MX', 'VE']],
        ['E096', ['MX', 'BR', 'CL', 'AR', 'DO', 'EC', 'PY']],
        ['E097', ['BR', 'MX', 'PE', 'CO', 'CL']],
        ['E098', ['CL', 'AR', 'BR', 'PE', 'MX', 'EC', 'CO']],
        ['E099', ['MX', 'AR', 'CO', 'VE']],
        ['E100', ['CO', 'AR', 'PA', 'PE', 'BR', 'CR']],
        ['E103', ['MY']],
        ['E104', ['MY']],
        ['E105', ['IT', 'PT', 'ES', 'GR', 'CY']],
        ['E106', ['ES', 'CY', 'GR', 'IL', 'IT', 'PT']],
        ['E107', ['MX']],
        ['E108', ['MX']],
        ['E110', ['MX', 'BR', 'AR', 'CR']],
        ['E111', ['AE', 'BH', 'KW', 'QA', 'OM', 'SA']],
        ['E112', ['AE', 'SA']],
        ['E116', ['DK', 'SE', 'NO', 'FI', 'EE', 'LV', 'LT']],
        ['E117', ['NG']],
        ['E118', ['US', 'CA']],
        ['E119', ['NL', 'BE', 'FR', 'DE']],
        ['E120', ['NO']],
        ['E121', ['NO']],
        ['E122', ['OM']],
        ['E123', ['OM']],
        ['E124', ['PH']],
        ['E125', ['PH']],
        ['E128', ['PT']],
        ['E129', ['QA']],
        ['E132', ['SA']],
        ['E133', ['SA']],
        ['E135', ['SA']],
        ['E137', ['SA']],
        ['E138', ['SA']],
        ['E140', ['SG']],
        ['E141', ['SG']],
        ['E143', ['SG']],
        ['E145', ['ZA', 'BW']],
        ['E146', ['MY', 'VN', 'TH', 'ID', 'MM', 'PH', 'KH']],
        ['E147', ['SG', 'MY', 'TH', 'ID', 'VN']],
        ['E148', ['KR']],
        ['E149', ['KR']],
        ['E150', ['KR']],
        ['E151', ['KR']],
        ['E152', ['KR']],
        ['E153', ['ZA', 'AO', 'ET', 'ZM', 'NG', 'UG', 'TN']],
        ['E154', ['ZA', 'GH', 'MZ', 'NA', 'NG', 'CM', 'ZM']],
        ['E155', ['ES']],
        ['E156', ['ES']],
        ['E158', ['SE']],
        ['E159', ['SE']],
        ['E161', ['CH', 'US', 'DK']],
        ['E163', ['TH']],
        ['E164', ['TH']],
        ['E165', ['TR']],
        ['E166', ['TR']],
        ['E167', ['TR']],
        ['E168', ['TR']],
        ['E170', ['UA']],
        ['E171', ['UA']],
        ['E174', ['AE']],
        ['E175', ['AE']],
        ['E179', ['AE', 'KW']],
        ['E182', ['US']],
        ['E183', ['US', 'TN', 'UG', 'KE', 'MM', 'PH', 'GH']],
        ['E184', ['US']],
        ['E185', ['US']],
        ['E186', ['US']],
        ['E187', ['US', 'CA']],
        ['E188', ['US']],
        ['E189', ['US']],
        ['E191', ['US']],
        ['E192', ['US', 'CA', 'MX']],
        ['E194', ['US']],
        ['E209', ['TN', 'LY', 'EG']],
        ['E210', ['MN']],
        ['E211', ['KZ']],
        ['E212', ['TW']],
        ['E215', ['']],
        ['E217', ['MA']],
        ['E218', ['AT']],
        ['E219', ['CZ', 'BG', 'RO', 'BA', 'SK', 'HR', 'HU']],
        ['E220', ['CZ', 'PL', 'RO', 'BG', 'SK']],
        ['E221', ['BG', 'PL', 'RS', 'BA']],
        ['E222', ['PL', 'BG', 'CZ', 'HU', 'RO', 'SI']],
        ['E223', ['CO']],
        ['E224', ['XG']],
        ['E225', ['XG', 'QA', 'JP', 'CN', 'PE', 'ID', 'FR']],
        ['E226', ['XG', 'CN', 'IN', 'HK']],
        ['E227', ['IN']],
        ['E228', ['ID']],
        ['E229', ['IR']],
        ['E230', ['BR', 'MX', 'PA', 'CU', 'PE']],
        ['E231', ['SA', 'AE', 'KW', 'OM', 'BH']],
        ['E232', ['AE', 'SA', 'KW', 'QA', 'OM']],
        ['E233', ['FI', 'DK', 'NO', 'SE', 'IS']],
        ['E234', ['']],
        ['E236', ['SG', 'TH']],
        ['E237', ['ES']],
        ['E238', ['CH']],
        ['E239', ['AT', 'CH', 'NL']],
        ['E241', ['BR', 'AR', 'MX', 'CO']],]
    TargetCountry = apps.get_model('mi', 'TargetCountry')
    Target = apps.get_model('mi', 'Target')
    FinancialYear = apps.get_model('mi', 'FinancialYear')
    Country = apps.get_model('mi', 'Country')
    # update 2016 targets
    financial_year_16 = FinancialYear.objects.get(id=2016)
    for item in hvc_2016:
        hvc, country_code, fy = item
        # skip entries without country codes
        if country_code != '':
            country = Country.objects.get(country=country_code)
            if Target.objects.filter(campaign_id=hvc, financial_year=financial_year_16).exists():
                target = Target.objects.get(campaign_id=hvc, financial_year=financial_year_16)
                target_country = TargetCountry.objects.get(target=target, country=country)
                target_country.contributes_to_target = True
                target_country.save()
    # update 2017 targets
    financial_year_17 = FinancialYear.objects.get(id=2017)
    for item in hvc_2017:
        hvc = item[0]
        if Target.objects.filter(campaign_id=hvc, financial_year=financial_year_17).exists():
            target = Target.objects.get(campaign_id=hvc, financial_year=financial_year_17)
            country_code = item[1][0]   # we are only interested in primary market, which is first one
            # skip entries without country codes and globals
            if country_code != '' and country_code != 'XG':
                country = Country.objects.get(country=country_code)
                target_country = TargetCountry.objects.get(target=target, country=country)
                target_country.contributes_to_target = True
                target_country.save()


def add_2017_hvc_countries__0038(apps, schema_editor):
    Target = apps.get_model('mi', 'Target')
    FinancialYear = apps.get_model('mi', 'FinancialYear')
    Country = apps.get_model('mi', 'Country')
    hvc_2017 = [['E002', ['AU', 'NZ']], ['E005', ['AU', 'NZ']], ['E006', ['AU']], ['E007', ['AZ']], ['E008', ['BH']], ['E009', ['LT', 'EE', 'LV']], ['E011', ['BE', 'NL', 'LU']], ['E012', ['BR']], ['E013', ['BR']], ['E014', ['BR']], ['E015', ['CA']], ['E016', ['CA']], ['E017', ['HU', 'CZ', 'PL', 'RO', 'SK', 'BG', 'RS']], ['E018', ['PL', 'CZ', 'RO', 'SK', 'BG']], ['E019', ['PL', 'BG', 'CZ', 'RO', 'RS', 'SK']], ['E020', ['RO', 'BG', 'CZ', 'HU', 'PL', 'SK', 'SI']], ['E021', ['CL']], ['E022', ['CN']], ['E023', ['CN']], ['E024', ['CN']], ['E025', ['CN']], ['E026', ['CN']], ['E027', ['CN']], ['E028', ['CN']], ['E029', ['CN']], ['E030', ['CN']], ['E031', ['CN', 'HK']], ['E032', ['CN']], ['E033', ['CN', 'HK']], ['E034', ['CN']], ['E035', ['CN']], ['E037', ['CN']], ['E038', ['CN', 'HK']], ['E040', ['DK']], ['E041', ['KE', 'ET', 'TN', 'UG']], ['E042', ['TN', 'UG', 'MZ']], ['E043', ['KE', 'ET', 'TN', 'UG']], ['E044', ['FI']], ['E045', ['FR']], ['E046', ['FR']], ['E047', ['FR']], ['E049', ['DE']], ['E050', ['DE', 'AT', 'CH']], ['E051', ['DE']], ['E052', ['DE']], ['E053', ['DE', 'SE']], ['E054', ['DE', 'FR', 'IE', 'CH']], ['E055', ['DE', 'CH', 'AT']], ['E056', ['GH', 'GN', 'ZM', "CI", 'AO', 'TN']], ['E058', ['HK']], ['E059', ['HK']], ['E061', ['HK', 'TW']], ['E063', ['IN']], ['E064', ['IN']], ['E065', ['IN']], ['E066', ['IN']], ['E067', ['IN']], ['E068', ['IN']], ['E069', ['IN']], ['E070', ['IN']], ['E071', ['IN']], ['E072', ['IN']], ['E073', ['IN']], ['E074', ['IN']], ['E075', ['IN']], ['E076', ['IN']], ['E078', ['ID']], ['E079', ['ID']], ['E081', ['IQ']], ['E082', ['IQ']], ['E083', ['IT']], ['E085', ['JP']], ['E086', ['JP']], ['E087', ['JP']], ['E089', ['JP']], ['E091', ['KZ']], ['E092', ['KW']], ['E094', ['BR', 'CO', 'MX', 'EC', 'PA']], ['E095', ['BR', 'CO', 'MX', 'VE']], ['E096', ['MX', 'BR', 'CL', 'AR', 'DO', 'EC', 'PY']], ['E097', ['BR', 'MX', 'PE', 'CO', 'CL']], ['E098', ['CL', 'AR', 'BR', 'PE', 'MX', 'EC', 'CO']], ['E099', ['MX', 'AR', 'CO', 'VE']], ['E100', ['CO', 'AR', 'PA', 'PE', 'BR', 'CR']], ['E103', ['MY']], ['E104', ['MY']], ['E105', ['IT', 'PT', 'ES', 'GR', 'CY']], ['E106', ['ES', 'CY', 'GR', 'IL', 'IT', 'PT']], ['E107', ['MX']], ['E108', ['MX']], ['E110', ['MX', 'BR', 'AR', 'CR']], ['E111', ['AE', 'BH', 'KW', 'QA', 'OM', 'SA']], ['E112', ['AE', 'SA']], ['E116', ['DK', 'SE', 'NO', 'FI', 'EE', 'LV', 'LT']], ['E117', ['NG']], ['E118', ['US', 'CA']], ['E119', ['NL', 'BE', 'FR', 'DE']], ['E120', ['NO']], ['E121', ['NO']], ['E122', ['OM']], ['E123', ['OM']], ['E124', ['PH']], ['E125', ['PH']], ['E128', ['PT']], ['E129', ['QA']], ['E132', ['SA']], ['E133', ['SA']], ['E135', ['SA']], ['E137', ['SA']], ['E138', ['SA']], ['E140', ['SG']], ['E141', ['SG']], ['E143', ['SG']], ['E145', ['ZA', 'BW']], ['E146', ['MY', 'VN', 'TH', 'ID', 'MM', 'PH', 'KH']], ['E147', ['SG', 'MY', 'TH', 'ID', 'VN']], ['E148', ['KR']], ['E149', ['KR']], ['E150', ['KR']], ['E151', ['KR']], ['E152', ['KR']], ['E153', ['ZA', 'AO', 'ET', 'ZM', 'NG', 'UG', 'TN']], ['E154', ['ZA', 'GH', 'MZ', 'NA', 'NG', 'CM', 'ZM']], ['E155', ['ES']], ['E156', ['ES']], ['E158', ['SE']], ['E159', ['SE']], ['E161', ['CH', 'US', 'DK']], ['E163', ['TH']], ['E164', ['TH']], ['E165', ['TR']], ['E166', ['TR']], ['E167', ['TR']], ['E168', ['TR']], ['E169', ['TR']], ['E170', ['UA']], ['E171', ['UA']], ['E174', ['AE']], ['E175', ['AE']], ['E179', ['AE', 'KW']], ['E182', ['US']], ['E183', ['US', 'TN', 'UG', 'KE', 'MM', 'PH', 'GH']], ['E184', ['US']], ['E185', ['US']], ['E186', ['US']], ['E187', ['US', 'CA']], ['E188', ['US']], ['E189', ['US']], ['E191', ['US']], ['E192', ['US', 'CA', 'MX']], ['E194', ['US']], ['E209', ['TN', 'LY', 'EG']], ['E210', ['MN']], ['E211', ['KZ']], ['E212', ['TW']], ['E215', ['']], ['E217', ['MA']], ['E218', ['AT']], ['E219', ['CZ', 'BG', 'RO', 'BA', 'SK', 'HR', 'HU']], ['E220', ['CZ', 'PL', 'RO', 'BG', 'SK']], ['E221', ['BG', 'PL', 'RS', 'BA']], ['E222', ['PL', 'BG', 'CZ', 'HU', 'RO', 'SI']], ['E223', ['CO']], ['E224', ['XG']], ['E225', ['QA', 'JP', 'CN', 'PE', 'ID', 'FR']], ['E226', ['CN', 'IN', 'HK']], ['E227', ['IN']], ['E228', ['ID']], ['E229', ['IR']], ['E230', ['BR', 'MX', 'PA', 'CU', 'PE']], ['E231', ['SA', 'AE', 'KW', 'OM', 'BH']], ['E232', ['AE', 'SA', 'KW', 'QA', 'OM']], ['E233', ['FI', 'DK', 'NO', 'SE', 'IS']], ['E234', ['']], ['E235', ['RU']], ['E236', ['SG', 'TH']], ['E237', ['ES']], ['E238', ['CH']], ['E239', ['AT', 'CH', 'NL']], ['E240', ['BR', 'AR', 'MX', 'CO']], ['E241', ['IR']], ['E242', ['RU']], ['E243', ['RU']]]
    financial_year = FinancialYear.objects.get(id=2017)
    for item in hvc_2017:
        hvc = item[0]
        if Target.objects.filter(campaign_id=hvc, financial_year=financial_year).exists():
            target = Target.objects.get(campaign_id=hvc, financial_year=financial_year)
            for country_code in item[1]:
                # skip entries without country codes
                if country_code != '' and country_code != 'XG':
                    country = Country.objects.get(country=country_code)
                    target.country.add(country)


def add_2017_hvc_global__0043(apps, schema_editor):
    Country = apps.get_model('mi', 'Country')
    Target = apps.get_model('mi', 'Target')
    FinancialYear = apps.get_model('mi', 'FinancialYear')
    global_country, _ = Country.objects.get_or_create(country='XG')
    hvc_2017 = ['E225', 'E224']
    financial_year = FinancialYear.objects.get(id=2017)
    for hvc in hvc_2017:
        if Target.objects.filter(campaign_id=hvc, financial_year=financial_year).exists():
            target = Target.objects.get(campaign_id=hvc, financial_year=financial_year)
            target.country.add(global_country)
            target.save()


def add_mid_year_changes_2017_18__0050(apps, schema_editor):
    Country = apps.get_model('mi', 'Country')
    Target = apps.get_model('mi', 'Target')
    FinancialYear = apps.get_model('mi', 'FinancialYear')
    TargetCountry = apps.get_model('mi', 'TargetCountry')

    # E020 has had FI included as a secondary market
    financial_year_17 = FinancialYear.objects.get(id=2017)
    if Target.objects.filter(campaign_id='E020', financial_year=financial_year_17).exists():
        target = Target.objects.get(
            campaign_id='E020', financial_year=financial_year_17)
        country_code = 'FI'
        country = Country.objects.get(country=country_code)
        TargetCountry(target=target, country=country).save()

    # associate E242 with SN as primary market and MR as secondary
    if Target.objects.filter(campaign_id='E242', financial_year=financial_year_17).exists():
        target = Target.objects.get(
            campaign_id='E242', financial_year=financial_year_17)
        primary = Country.objects.get(country='SN')
        TargetCountry(target=target, country=primary,
                      contributes_to_target=True).save()

        secondary = Country.objects.get(country='MR')
        TargetCountry(target=target, country=secondary).save()


class Migration(migrations.Migration):

    replaces = [('mi', '0001_initial'), ('mi', '0002_sectorteam'), ('mi', '0003_auto_20161122_1423'), ('mi', '0004_overseasregion'), ('mi', '0005_auto_20161128_1522'), ('mi', '0006_sector'), ('mi', '0007_auto_20161130_1154'), ('mi', '0008_target_sector_team'), ('mi', '0009_auto_20161130_1223'), ('mi', '0010_auto_20161130_1451'), ('mi', '0011_auto_20161130_1452'), ('mi', '0012_target_country'), ('mi', '0013_auto_20161130_1540'), ('mi', '0014_auto_20170104_1624'), ('mi', '0015_auto_20170112_1113'), ('mi', '0016_auto_20170112_1122'), ('mi', '0017_auto_20170112_1235'), ('mi', '0018_auto_20170119_1358'), ('mi', '0019_auto_20170119_1513'), ('mi', '0020_auto_20170120_1251'), ('mi', '0021_auto_20170120_1253'), ('mi', '0022_auto_20170120_1617'), ('mi', '0023_auto_20170120_1617'), ('mi', '0024_auto_20170120_1649'), ('mi', '0025_auto_20170123_1435'), ('mi', '0026_auto_20170222_1148'), ('mi', '0027_auto_20170222_1149'), ('mi', '0028_auto_20170222_1202'), ('mi', '0029_auto_20170329_1051'), ('mi', '0030_auto_20170403_1338'), ('mi', '0031_auto_20170403_1515'), ('mi', '0032_auto_20170403_1518'), ('mi', '0033_auto_20170508_1614'), ('mi', '0034_auto_20170509_0843'), ('mi', '0035_auto_20170511_1344'), ('mi', '0036_auto_20170605_1635'), ('mi', '0037_auto_20170605_1636'), ('mi', '0038_auto_20170608_1404'), ('mi', '0039_auto_20170612_0958'), ('mi', '0040_auto_20170612_1012'), ('mi', '0036_auto_20170612_1438'), ('mi', '0037_auto_20170610_2310'), ('mi', '0038_auto_20170612_1255'), ('mi', '0041_merge_20170614_0922'), ('mi', '0042_auto_20170614_1114'), ('mi', '0043_auto_20170707_1446'), ('mi', '0044_auto_20170904_1011'), ('mi', '0045_auto_20170905_1606'), ('mi', '0046_auto_20170905_1610'), ('mi', '0047_auto_20170905_1623'), ('mi', '0048_auto_20170906_0924'), ('mi', '0049_auto_20171101_1436'), ('mi', '0050_auto_20171127_1548'), ('mi', '0051_auto_20180117_1423'), ('mi', '0052_add_unknown_uk_region_target')]

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Target',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('campaign_id', models.CharField(max_length=4)),
                ('target', models.PositiveIntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='SectorTeam',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128)),
            ],
        ),
        migrations.CreateModel(
            name='OverseasRegion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128)),
            ],
        ),
        migrations.RunPython(
            code=do_thing__0005,
        ),
        migrations.CreateModel(
            name='Sector',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128)),
                ('sector_team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sectors', to='mi.SectorTeam')),
            ],
        ),
        migrations.RunPython(
            code=do_thing__0007,
        ),
        migrations.AddField(
            model_name='target',
            name='sector_team',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='hvcs', to='mi.SectorTeam'),
            preserve_default=False,
        ),
        migrations.RunPython(
            code=do_thing__0009,
        ),
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('country', django_countries.fields.CountryField(max_length=2, unique=True)),
                ('overseas_region', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='countries', to='mi.OverseasRegion')),
            ],
        ),
        migrations.AlterField(
            model_name='target',
            name='sector_team',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='targets', to='mi.SectorTeam'),
        ),
        migrations.RunPython(
            code=do_thing__0011,
        ),
        migrations.AddField(
            model_name='target',
            name='country',
            field=models.ForeignKey(default='1', on_delete=django.db.models.deletion.CASCADE, related_name='targets', to='mi.Country'),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name='target',
            name='target',
            field=models.BigIntegerField(),
        ),
        migrations.CreateModel(
            name='ParentSector',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128)),
                ('sector_team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='parent_sectors', to='mi.SectorTeam')),
            ],
        ),
        migrations.RunPython(
            code=add_parent_sectors__0015,
        ),
        migrations.AddField(
            model_name='sector',
            name='parent_sector',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='sectors', to='mi.ParentSector'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='target',
            name='parent_sector',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='targets', to='mi.ParentSector'),
            preserve_default=False,
        ),
        migrations.RunPython(
            code=update_sectors__0016,
        ),
        migrations.RunPython(
            code=update_targets__0017,
        ),
        migrations.CreateModel(
            name='HvcGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128)),
                ('sector_team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='hvc_groups', to='mi.SectorTeam')),
            ],
        ),
        migrations.RemoveField(
            model_name='target',
            name='parent_sector',
        ),
        migrations.RunPython(
            code=add_hvc_group__0018,
        ),
        migrations.AddField(
            model_name='target',
            name='hvc_group',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='targets', to='mi.HVCGroup'),
            preserve_default=False,
        ),
        migrations.RunPython(
            code=update_targets__0019,
        ),
        migrations.AlterField(
            model_name='sector',
            name='parent_sector',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sectors', to='mi.ParentSector'),
        ),
        migrations.RunPython(
            code=clear_sector_parents__0021,
        ),
        migrations.RunPython(
            code=delete_parent_sectors__0022,
        ),
        migrations.RunPython(
            code=add_parent_sectors__0022,
        ),
        migrations.AlterField(
            model_name='sector',
            name='parent_sector',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='sectors', to='mi.ParentSector'),
            preserve_default=False,
        ),
        migrations.RunPython(
            code=update_sectors__0024,
        ),
        migrations.RunPython(
            code=correct_targets__0025,
        ),
        migrations.AlterField(
            model_name='target',
            name='hvc_group',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='targets', to='mi.HVCGroup'),
        ),
        migrations.AlterField(
            model_name='target',
            name='hvc_group',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='targets', to='mi.HVCGroup'),
        ),
        migrations.AlterField(
            model_name='target',
            name='country',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='targets', to='mi.Country'),
        ),
        migrations.CreateModel(
            name='FinancialYear',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('description', models.CharField(max_length=128)),
            ],
        ),
        migrations.AlterField(
            model_name='target',
            name='hvc_group',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='targets', to='mi.HVCGroup'),
        ),
        migrations.AddField(
            model_name='target',
            name='financial_year',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='targets', to='mi.FinancialYear'),
        ),
        migrations.RunPython(
            code=add_financial_years__0031,
        ),
        migrations.RunPython(
            code=update_2016_targets_fy__0031,
        ),
        migrations.AlterField(
            model_name='target',
            name='financial_year',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='targets', to='mi.FinancialYear'),
        ),
        migrations.AlterField(
            model_name='target',
            name='hvc_group',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='targets', to='mi.HVCGroup'),
        ),
        migrations.RemoveField(
            model_name='sector',
            name='parent_sector',
        ),
        migrations.AddField(
            model_name='sector',
            name='parent_sector',
            field=models.ManyToManyField(related_name='sectors', to='mi.ParentSector'),
        ),
        migrations.RemoveField(
            model_name='sector',
            name='sector_team',
        ),
        migrations.AddField(
            model_name='sector',
            name='sector_team',
            field=models.ManyToManyField(related_name='sectors', to='mi.SectorTeam'),
        ),
        migrations.RunPython(
            code=do_thing__0034,
        ),
        migrations.RunPython(
            code=add_2017_mi_data__0035,
        ),
        migrations.RunPython(
            code=add_sectors_to_new_sector_teams__0035,
        ),
        migrations.CreateModel(
            name='OverseasRegionGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=128)),
            ],
        ),
        migrations.CreateModel(
            name='OverseasRegionYear',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mi.Country')),
                ('financial_year', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mi.FinancialYear')),
                ('overseas_region', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mi.OverseasRegion')),
            ],
            options={
                'unique_together': {('financial_year', 'country')},
            },
        ),
        migrations.AlterField(
            model_name='target',
            name='country',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='targets', to='mi.Country'),
        ),
        migrations.AlterField(
            model_name='target',
            name='hvc_group',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='targets', to='mi.HVCGroup'),
        ),
        migrations.AddField(
            model_name='country',
            name='overseas_region_new',
            field=models.ManyToManyField(related_name='countries_new', through='mi.OverseasRegionYear', to='mi.OverseasRegion'),
        ),
        migrations.AddField(
            model_name='overseasregion',
            name='group',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='regions', to='mi.OverseasRegionGroup'),
        ),
        migrations.RunPython(
            code=forwards__0037,
            reverse_code=django.db.migrations.operations.special.RunPython.noop,
        ),
        migrations.RemoveField(
            model_name='country',
            name='overseas_region',
        ),
        migrations.RemoveField(
            model_name='country',
            name='overseas_region_new',
        ),
        migrations.AddField(
            model_name='country',
            name='overseas_regions',
            field=models.ManyToManyField(related_name='countries', through='mi.OverseasRegionYear', to='mi.OverseasRegion'),
        ),
        migrations.AlterField(
            model_name='target',
            name='hvc_group',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='targets', to='mi.HVCGroup'),
        ),
        migrations.RemoveField(
            model_name='overseasregion',
            name='group',
        ),
        migrations.AlterField(
            model_name='target',
            name='hvc_group',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='targets', to='mi.HVCGroup'),
        ),
        migrations.CreateModel(
            name='OverseasRegionGroupYear',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('financial_year', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mi.FinancialYear')),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mi.OverseasRegionGroup')),
                ('region', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mi.OverseasRegion')),
            ],
        ),
        migrations.AddField(
            model_name='overseasregiongroup',
            name='regions',
            field=models.ManyToManyField(through='mi.OverseasRegionGroupYear', to='mi.OverseasRegion'),
        ),
        migrations.RunPython(
            code=forwards__0040,
            reverse_code=django.db.migrations.operations.special.RunPython.noop,
        ),
        migrations.RemoveField(
            model_name='target',
            name='country',
        ),
        migrations.AddField(
            model_name='target',
            name='country',
            field=models.ManyToManyField(related_name='targets', to='mi.Country'),
        ),
        migrations.RunPython(
            code=add_2016_hvc_countries__0037,
        ),
        migrations.RunPython(
            code=add_2017_hvc_countries__0038,
        ),
        migrations.RunPython(
            code=add_2017_hvc_global__0043,
            reverse_code=django.db.migrations.operations.special.RunPython.noop,
        ),
        migrations.AlterField(
            model_name='target',
            name='hvc_group',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='targets', to='mi.HVCGroup'),
        ),
        migrations.CreateModel(
            name='UKRegionTarget',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('new_exporters', django.contrib.postgres.fields.ArrayField(base_field=models.BigIntegerField(), size=12)),
                ('sustainable', django.contrib.postgres.fields.ArrayField(base_field=models.BigIntegerField(), size=12)),
                ('growth', django.contrib.postgres.fields.ArrayField(base_field=models.BigIntegerField(default=0), size=12)),
                ('region', models.PositiveSmallIntegerField(choices=[(1, 'East Midlands'), (2, 'East of England'), (3, 'London'), (4, 'North East'), (5, 'North West'), (6, 'Northern Ireland'), (7, 'Scotland'), (8, 'South East'), (9, 'South West'), (10, 'Wales'), (11, 'West Midlands'), (12, 'Yorkshire and The Humber')])),
                ('financial_year', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='volume_targets', to='mi.FinancialYear')),
            ],
            options={
                'unique_together': {('financial_year', 'region')},
            },
        ),
        migrations.AlterField(
            model_name='target',
            name='hvc_group',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='targets', to='mi.HVCGroup'),
        ),
        migrations.SeparateDatabaseAndState(
            state_operations=[
                migrations.CreateModel(
                    name='TargetCountry',
                    fields=[
                        ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                        ('country', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mi.Country')),
                    ],
                    options={
                        'db_table': 'mi_target_country',
                    },
                ),
                migrations.AlterField(
                    model_name='target',
                    name='country',
                    field=models.ManyToManyField(related_name='targets', through='mi.TargetCountry', to='mi.Country'),
                ),
                migrations.AddField(
                    model_name='targetcountry',
                    name='target',
                    field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mi.Target'),
                ),
                migrations.AlterUniqueTogether(
                    name='targetcountry',
                    unique_together={('target', 'country')},
                ),
            ],
        ),
        migrations.AddField(
            model_name='targetcountry',
            name='contributes_to_target',
            field=models.BooleanField(default=False),
        ),
        migrations.RunPython(
            code=target_country_correction__0048,
        ),
        migrations.RunPython(
            code=add_contributing_countries__0048,
        ),
        migrations.CreateModel(
            name='CSVFile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('s3_path', models.CharField(max_length=255, unique=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.RunPython(
            code=add_mid_year_changes_2017_18__0050,
        ),
        migrations.AlterField(
            model_name='overseasregiongroupyear',
            name='financial_year',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='mi.FinancialYear'),
        ),
        migrations.AlterField(
            model_name='overseasregiongroupyear',
            name='group',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='mi.OverseasRegionGroup'),
        ),
        migrations.AlterField(
            model_name='overseasregiongroupyear',
            name='region',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='mi.OverseasRegion'),
        ),
        migrations.AlterField(
            model_name='overseasregionyear',
            name='country',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='mi.Country'),
        ),
        migrations.AlterField(
            model_name='overseasregionyear',
            name='financial_year',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='mi.FinancialYear'),
        ),
        migrations.AlterField(
            model_name='overseasregionyear',
            name='overseas_region',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='mi.OverseasRegion'),
        ),
        migrations.AlterField(
            model_name='parentsector',
            name='sector_team',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='parent_sectors', to='mi.SectorTeam'),
        ),
        migrations.AlterField(
            model_name='target',
            name='financial_year',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='targets', to='mi.FinancialYear'),
        ),
        migrations.AlterField(
            model_name='target',
            name='hvc_group',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='targets', to='mi.HVCGroup'),
        ),
        migrations.AlterField(
            model_name='targetcountry',
            name='country',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='mi.Country'),
        ),
        migrations.AlterField(
            model_name='targetcountry',
            name='target',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='mi.Target'),
        ),
        migrations.AlterField(
            model_name='ukregiontarget',
            name='financial_year',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='volume_targets', to='mi.FinancialYear'),
        ),
        migrations.DeleteModel(
            name='CSVFile',
        ),
        migrations.AddField(
            model_name='ukregiontarget',
            name='unknown',
            field=django.contrib.postgres.fields.ArrayField(base_field=models.BigIntegerField(), default=[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], size=12),
            preserve_default=False,
        ),
    ]
