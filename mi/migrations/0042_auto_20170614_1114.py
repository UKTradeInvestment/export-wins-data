# -*- coding: utf-8 -*-
# Generated by Django 1.10.7 on 2017-06-14 11:14
from __future__ import unicode_literals

from django.db import migrations

def add_2016_hvc_multi_markets(apps, schema_editor):
    """
    Adding secondary markets to 2016/17 FY HVCs    
    """
    Target = apps.get_model('mi', 'Target')
    FinancialYear = apps.get_model('mi', 'FinancialYear')
    Country = apps.get_model('mi', 'Country')
    hvc_multi_market_16 = [
        ['E001', ['NZ']],
        ['E002', ['NZ']],
        ['E003', ['NZ']],
        ['E009', ['EE']],
        ['E017', ['CZ', 'PL', 'RO', 'SK']],
        ['E018', ['CZ','RO', 'SK']],
        ['E019', ['BG', 'CZ', 'HU', 'RO']],
        ['E020', ['BG', 'CZ', 'HU', 'PL', 'SK', 'SI']],
        ['E041', ['ET', 'TZ', 'UG']],
        ['E042', ['UG', 'MZ']],
        ['E043', ['ET', 'TZ', 'UG']],
        ['E056', ['GN']],
        ['E061', ['']],
        ['E068', ['IN']],
        ['E094', ['CO', 'MX', 'PE']],
        ['E095', ['CO', 'MX', 'PA']],
        ['E096', ['AR', 'BR', 'CL']],
        ['E097', ['CL', 'CO', 'MX', 'PE']],
        ['E098', ['AR', 'BR', 'CO', 'DO', 'EC', 'MX', 'PA', 'PE', 'VE']],
        ['E099', ['AR', 'CO', 'VE']],
        ['E100', ['AR', 'PA', 'PE']],
        ['E101', ['CO', 'CR', 'PA']],
        ['E105', ['PT', 'ES']],
        ['E106', ['CY', 'GR', 'IL', 'IT', 'PT']],
        ['E111', ['BH', 'KW', 'QA']],
        ['E112', ['AE']],
        ['E115', ['FI', 'NO', 'SE']],
        ['E116', ['FI', 'NO', 'SE']],
        ['E117', ['DK', 'LV', 'LT', 'NO']],
        ['E118', ['CA']],
        ['E119', ['BE', 'FR', 'DE']],
        ['E147', ['MY', 'ID', 'TH', 'VN']],
        ['E153', ['AO', 'MZ', 'ZM']],
        ['E154', ['AO', 'MZ', 'NA', 'ZM']],
        ['E209', ['MA', 'LY', 'EG']]
    ]
    financial_year = FinancialYear.objects.get(id=2016)
    for item in hvc_multi_market_16:
        hvc = item[0]
        if Target.objects.filter(campaign_id=hvc, financial_year=financial_year).exists():
            target = Target.objects.get(campaign_id=hvc, financial_year=financial_year)
            for country_code in item[1]:
                # skip entries without country codes
                if country_code != '' and country_code != 'XG':
                    country = Country.objects.get(country=country_code)
                    target.country.add(country)


class Migration(migrations.Migration):

    dependencies = [
        ('mi', '0041_merge_20170614_0922'),
    ]

    operations = [
    ]
